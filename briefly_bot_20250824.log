2025-08-24 15:29:49,773 - __main__ - INFO - Briefly Bot logging initialized
2025-08-24 15:29:49,773 - __main__ - INFO - üöÄ Briefly Bot - AI/ML News Aggregator
2025-08-24 15:29:49,773 - __main__ - INFO - ==================================================
2025-08-24 15:29:49,774 - __main__ - INFO - üìÖ Started at: 2025-08-24 15:29:49
2025-08-24 15:29:49,774 - __main__ - INFO - üîß Dry run: Yes
2025-08-24 15:29:49,774 - __main__ - INFO - üìä Max articles: 4
2025-08-24 15:29:49,774 - __main__ - INFO - üß† LLM Provider: openai
2025-08-24 15:29:49,774 - __main__ - INFO - üì∫ Target channel: SLACK_CHANNEL_ID env var
2025-08-24 15:29:49,774 - __main__ - INFO - ==================================================
2025-08-24 15:29:49,774 - __main__ - INFO - üöÄ Starting Briefly Bot...
2025-08-24 15:29:49,774 - __main__ - INFO - ============================================================
2025-08-24 15:29:49,774 - __main__ - INFO - üîß Step 1: Initializing components...
2025-08-24 15:29:49,775 - __main__ - INFO - ----------------------------------------
2025-08-24 15:29:49,775 - __main__ - INFO - üîß Initializing components...
2025-08-24 15:29:49,775 - slackbot.services.aggregation_service - INFO - Initializing AggregationService
2025-08-24 15:29:49,775 - slackbot.collectors.base_collector - INFO - Initialized collector: API News Collector
2025-08-24 15:29:49,785 - slackbot.collectors.api_collector - INFO - Loaded 8 sources from /home/dheeraj/projects/NewsFinderBot/slackbot/collectors/sources/api_sources_config.yaml
2025-08-24 15:29:49,785 - slackbot.collectors.api_collector - INFO - NewsAPI client initialized successfully
2025-08-24 15:29:49,785 - slackbot.collectors.api_collector - INFO - ArXiv client available
2025-08-24 15:29:49,785 - slackbot.services.aggregation_service - INFO - ‚úÖ API collector initialized successfully
2025-08-24 15:29:49,785 - slackbot.collectors.base_collector - INFO - Initialized CollectorManager
2025-08-24 15:29:49,786 - slackbot.services.aggregation_service - INFO - üìä AggregationService initialized with 1 collectors
2025-08-24 15:29:49,786 - __main__ - INFO - ‚úÖ AggregationService initialized
2025-08-24 15:29:49,786 - slackbot.services.summarizer_service - INFO - Initializing SummarizerService with provider: openai
2025-08-24 15:29:50,422 - slackbot.summarizer.tldr_summarizer - INFO - Initialized OpenAI TLDR summarizer with model: gpt-3.5-turbo
2025-08-24 15:29:50,451 - slackbot.summarizer.tldr_summarizer - INFO - Initialized Gemini fallback with model: gemini-1.5-flash
2025-08-24 15:29:50,452 - slackbot.services.summarizer_service - INFO - ‚úÖ Summarizer initialized successfully with openai
2025-08-24 15:29:50,452 - __main__ - INFO - ‚úÖ SummarizerService initialized
2025-08-24 15:29:50,452 - slackbot.services.publisher_service - INFO - Initializing PublisherService with default platform: slack
2025-08-24 15:29:50,613 - slack_bolt.App - DEBUG - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.23.0 Python/3.11.13 slackclient/3.36.0 Linux/6.8.0-65-generic'}
2025-08-24 15:29:52,296 - slack_bolt.App - DEBUG - Received the following response - status: 200, headers: {'date': 'Sun, 24 Aug 2025 09:59:51 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '6f28e566f0b14ba9c7846836a115ce07', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'chat:write,files:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKril4jBROoZOCigDHrdcAAAEBk', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '208', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-vcyximly,envoy-edge-bom-yiohfryc', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '239', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-hdly', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https:\/\/keyvaluesystems.slack.com\/","team":"KeyValue Software Systems","user":"briefly","team_id":"T4LJBDMDY","user_id":"U09BG266092","bot_id":"B09BG26606Q","is_enterprise_install":false}
2025-08-24 15:29:52,297 - slackbot.slack.publisher - INFO - Slack publisher initialized successfully
2025-08-24 15:29:52,297 - slackbot.services.publisher_service - INFO - ‚úÖ Slack publisher initialized successfully
2025-08-24 15:29:52,297 - slackbot.services.publisher_service - INFO - üì§ PublisherService initialized with 1 publishers
2025-08-24 15:29:52,297 - __main__ - INFO - ‚úÖ PublisherService initialized
2025-08-24 15:29:52,297 - __main__ - INFO - ‚úÖ All components initialized successfully
2025-08-24 15:29:52,297 - __main__ - INFO - 
üì∞ Step 2: Collecting News
2025-08-24 15:29:52,297 - __main__ - INFO - ----------------------------------------
2025-08-24 15:29:52,297 - __main__ - INFO - üîç Starting news collection...
2025-08-24 15:29:52,298 - slackbot.services.aggregation_service - INFO - üéØ Collecting 4 articles with balanced sources: True
2025-08-24 15:29:52,298 - slackbot.services.aggregation_service - INFO - üîç Collecting from api
2025-08-24 15:29:54,528 - slackbot.collectors.api_collector - INFO - Fetched 20 papers from ArXiv AI Papers
2025-08-24 15:29:55,250 - slackbot.collectors.api_collector - INFO - Fetched 5 papers from ArXiv Computer Vision
2025-08-24 15:29:55,695 - slackbot.collectors.api_collector - INFO - Fetched 2 papers from ArXiv NLP Papers
2025-08-24 15:29:56,010 - slackbot.collectors.api_collector - INFO - Fetched 1 papers from ArXiv Robotics
2025-08-24 15:29:56,010 - slackbot.collectors.api_collector - INFO - NewsAPI params for Tech News AI: {'q': 'AI', 'category': 'technology', 'language': 'en', 'country': 'us', 'page_size': 15}
2025-08-24 15:29:56,513 - slackbot.collectors.api_collector - INFO - NewsAPI response for Tech News AI: status=ok, totalResults=13, articles=13
2025-08-24 15:29:56,513 - slackbot.collectors.api_collector - INFO - Fetched 13 articles from Tech News AI
2025-08-24 15:29:56,514 - slackbot.collectors.api_collector - INFO - NewsAPI params for Business AI News: {'q': 'AI', 'category': 'business', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-24 15:29:56,909 - slackbot.collectors.api_collector - INFO - NewsAPI response for Business AI News: status=ok, totalResults=14, articles=9
2025-08-24 15:29:56,909 - slackbot.collectors.api_collector - INFO - Fetched 9 articles from Business AI News
2025-08-24 15:29:56,909 - slackbot.collectors.api_collector - INFO - NewsAPI params for Science AI News: {'q': 'AI', 'category': 'science', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-24 15:29:57,551 - slackbot.collectors.api_collector - INFO - NewsAPI response for Science AI News: status=ok, totalResults=14, articles=10
2025-08-24 15:29:57,551 - slackbot.collectors.api_collector - INFO - Fetched 10 articles from Science AI News
2025-08-24 15:29:57,552 - slackbot.collectors.api_collector - INFO - NewsAPI params for Health AI News: {'q': 'AI', 'category': 'health', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-24 15:29:58,829 - slackbot.collectors.api_collector - INFO - NewsAPI response for Health AI News: status=ok, totalResults=37, articles=8
2025-08-24 15:29:58,830 - slackbot.collectors.api_collector - INFO - Fetched 8 articles from Health AI News
2025-08-24 15:29:58,830 - slackbot.collectors.api_collector - INFO - Limited results to 20 items (balanced: 10 ArXiv, 10 NewsAPI)
2025-08-24 15:29:58,830 - slackbot.collectors.api_collector - INFO - Collected 20 total items from API News Collector
2025-08-24 15:29:58,830 - slackbot.services.aggregation_service - INFO - ‚úÖ Collected 20 articles from api
2025-08-24 15:29:58,830 - slackbot.services.aggregation_service - INFO - üìä api: collected 4 articles
2025-08-24 15:29:58,830 - slackbot.services.aggregation_service - INFO - ‚úÖ Balanced collection complete: 4 articles from 1 sources
2025-08-24 15:29:58,830 - __main__ - INFO - ‚úÖ Successfully collected 4 articles
2025-08-24 15:29:58,830 - __main__ - INFO -   1. Scaling Group Inference for Diverse and High-Quality Generat...
2025-08-24 15:29:58,831 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-24 15:29:58,831 - __main__ - INFO -      Category: Research Papers
2025-08-24 15:29:58,831 - __main__ - INFO -   2. Visual Autoregressive Modeling for Instruction-Guided Image ...
2025-08-24 15:29:58,831 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-24 15:29:58,831 - __main__ - INFO -      Category: Research Papers
2025-08-24 15:29:58,831 - __main__ - INFO -   3. SceneGen: Single-Image 3D Scene Generation in One Feedforwar...
2025-08-24 15:29:58,831 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-24 15:29:58,831 - __main__ - INFO -      Category: Research Papers
2025-08-24 15:29:58,831 - __main__ - INFO - 
üß† Step 3: Creating TLDR Summaries
2025-08-24 15:29:58,831 - __main__ - INFO - ----------------------------------------
2025-08-24 15:29:58,831 - __main__ - INFO - üß† Starting TLDR summarization...
2025-08-24 15:29:58,831 - slackbot.services.summarizer_service - INFO - üéØ Using summarization strategy: individual
2025-08-24 15:29:58,831 - slackbot.services.summarizer_service - INFO - üìù Batch summarizing 4 articles
2025-08-24 15:29:58,831 - slackbot.services.summarizer_service - INFO -   Processing 1/4: Scaling Group Inference for Diverse and High-Quali...
2025-08-24 15:29:58,832 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Scaling Group Inference for Diverse and High-Quali...
2025-08-24 15:29:58,847 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1a2278c8-2824-4d96-91e6-b78f1ce65b5e', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Scaling Group Inference for Diverse and High-Quality Generation\nContent: Generative models typically sample outputs independently, and recent\ninference-time guidance and scaling algorithms focus on improving the quality\nof individual samples. However, in real-world applications, users are often\npresented with a set of multiple images (e.g., 4-8) for each prompt, where\nindependent sampling tends to lead to redundant results, limiting user choices\nand hindering idea exploration. In this work, we introduce a scalable group\ninference method that improves both the diversity and quality of a group of\nsamples. We formulate group inference as a quadratic integer assignment\nproblem: candidate outputs are modeled as graph nodes, and a subset is selected\nto optimize sample quality (unary term) while maximizing group diversity\n(binary term). To substantially improve runtime efficiency, we progressively\nprune the candidate set using intermediate predictions, allowing our method to\nscale up to large candidate sets. Extensive experiments show that our method\nsignificantly improves group diversity and quality compared to independent\nsampling baselines and recent inference algorithms. Our framework generalizes\nacross a wide range of tasks, including text-to-image, image-to-image, image\nprompting, and video generation, enabling generative models to treat multiple\noutputs as cohesive groups rather than independent samples.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 15:29:58,854 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 15:29:58,854 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-08-24 15:29:58,878 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7489f85254d0>
2025-08-24 15:29:58,878 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7489fc316060> server_hostname='api.openai.com' timeout=None
2025-08-24 15:29:58,901 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7489f85258d0>
2025-08-24 15:29:58,901 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 15:29:58,901 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 15:29:58,902 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 15:29:58,902 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 15:29:58,902 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 15:30:01,261 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:00:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1600'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1766'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999269'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_b4376f670d1b4380bf1a26253a56bcdb'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=RerztFVCvg86aCvJg96Yx7hDimheykSrk5GfGjufv6k-1756029601-1.0.1.1-q_DVworg5LgVHnyl15VbYEv5OEhNrN66lsH6ztGHfqf4C.If2zUpKQCjkMZCqtgLXzVgqvRNPiB.Q_.69aGuKwprDbwpbuqetmwAOmPQBZ0; path=/; expires=Sun, 24-Aug-25 10:30:01 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=5ina5mB4ZhumovMOD.xvZcep.VA_CgLsWS6X_EOoD9Q-1756029601203-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'974200013e42b2a5-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 15:30:01,261 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 15:30:01,261 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 15:30:01,262 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 15:30:01,262 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 15:30:01,262 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 15:30:01,262 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sun, 24 Aug 2025 10:00:01 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'keyvalue-rtv23o'), ('openai-processing-ms', '1600'), ('openai-project', 'proj_whQdFja0l3II6fu7PPtC7wv5'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1766'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '50000000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '49999269'), ('x-ratelimit-reset-requests', '6ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_b4376f670d1b4380bf1a26253a56bcdb'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=RerztFVCvg86aCvJg96Yx7hDimheykSrk5GfGjufv6k-1756029601-1.0.1.1-q_DVworg5LgVHnyl15VbYEv5OEhNrN66lsH6ztGHfqf4C.If2zUpKQCjkMZCqtgLXzVgqvRNPiB.Q_.69aGuKwprDbwpbuqetmwAOmPQBZ0; path=/; expires=Sun, 24-Aug-25 10:30:01 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=5ina5mB4ZhumovMOD.xvZcep.VA_CgLsWS6X_EOoD9Q-1756029601203-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '974200013e42b2a5-MAA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-08-24 15:30:01,262 - openai._base_client - DEBUG - request_id: req_b4376f670d1b4380bf1a26253a56bcdb
2025-08-24 15:30:01,280 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 15:30:01,280 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 15:30:01,280 - slackbot.services.summarizer_service - INFO -   Processing 2/4: Visual Autoregressive Modeling for Instruction-Gui...
2025-08-24 15:30:01,280 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Visual Autoregressive Modeling for Instruction-Gui...
2025-08-24 15:30:01,282 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-19971b6a-3479-4b3b-b587-9450bd565508', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Visual Autoregressive Modeling for Instruction-Guided Image Editing\nContent: Recent advances in diffusion models have brought remarkable visual fidelity\nto instruction-guided image editing. However, their global denoising process\ninherently entangles the edited region with the entire image context, leading\nto unintended spurious modifications and compromised adherence to editing\ninstructions. In contrast, autoregressive models offer a distinct paradigm by\nformulating image synthesis as a sequential process over discrete visual\ntokens. Their causal and compositional mechanism naturally circumvents the\nadherence challenges of diffusion-based methods. In this paper, we present\nVAREdit, a visual autoregressive (VAR) framework that reframes image editing as\na next-scale prediction problem. Conditioned on source image features and text\ninstructions, VAREdit generates multi-scale target features to achieve precise\nedits. A core challenge in this paradigm is how to effectively condition the\nsource image tokens. We observe that finest-scale source features cannot\neffectively guide the prediction of coarser target features. To bridge this\ngap, we introduce a Scale-Aligned Reference (SAR) module, which injects\nscale-matched conditioning information into the first self-attention layer.\nVAREdit demonstrates significant advancements in both editing adherence and\nefficiency. On standard benchmarks, it outperforms leading diffusion-based\nmethods by 30\\%+ higher GPT-Balance score. Moreover, it completes a\n$512\\times512$ editing in 1.2 seconds, making it 2.2$\\times$ faster than the\nsimilarly sized UltraEdit. The models are available at\nhttps://github.com/HiDream-ai/VAREdit.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 15:30:01,283 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 15:30:01,283 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 15:30:01,283 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 15:30:01,283 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 15:30:01,284 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 15:30:01,284 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 15:30:03,011 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:00:03 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1382'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1411'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999205'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_a475d2cb57ee43539a16419d93e39a1a'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'974200102abdb2a5-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 15:30:03,011 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 15:30:03,012 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 15:30:03,012 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 15:30:03,012 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 15:30:03,012 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 15:30:03,012 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 24 Aug 2025 10:00:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1382', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1411', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999205', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_a475d2cb57ee43539a16419d93e39a1a', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '974200102abdb2a5-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-24 15:30:03,012 - openai._base_client - DEBUG - request_id: req_a475d2cb57ee43539a16419d93e39a1a
2025-08-24 15:30:03,025 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 15:30:03,025 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 15:30:03,025 - slackbot.services.summarizer_service - INFO -   Processing 3/4: SceneGen: Single-Image 3D Scene Generation in One ...
2025-08-24 15:30:03,025 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: SceneGen: Single-Image 3D Scene Generation in One ...
2025-08-24 15:30:03,028 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-334a8908-2887-47a9-b5a3-52eb84b384e0', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: SceneGen: Single-Image 3D Scene Generation in One Feedforward Pass\nContent: 3D content generation has recently attracted significant research interest\ndue to its applications in VR/AR and embodied AI. In this work, we address the\nchallenging task of synthesizing multiple 3D assets within a single scene\nimage. Concretely, our contributions are fourfold: (i) we present SceneGen, a\nnovel framework that takes a scene image and corresponding object masks as\ninput, simultaneously producing multiple 3D assets with geometry and texture.\nNotably, SceneGen operates with no need for optimization or asset retrieval;\n(ii) we introduce a novel feature aggregation module that integrates local and\nglobal scene information from visual and geometric encoders within the feature\nextraction module. Coupled with a position head, this enables the generation of\n3D assets and their relative spatial positions in a single feedforward pass;\n(iii) we demonstrate SceneGen\'s direct extensibility to multi-image input\nscenarios. Despite being trained solely on single-image inputs, our\narchitectural design enables improved generation performance with multi-image\ninputs; and (iv) extensive quantitative and qualitative evaluations confirm the\nefficiency and robust generation abilities of our approach. We believe this\nparadigm offers a novel solution for high-quality 3D content generation,\npotentially advancing its practical applications in downstream tasks. The code\nand model will be publicly available at: https://mengmouxu.github.io/SceneGen.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 15:30:03,029 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 15:30:03,029 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 15:30:03,030 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 15:30:03,030 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 15:30:03,030 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 15:30:03,030 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 15:30:06,477 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:00:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'2746'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2821'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999242'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_23e5500c0f0a4974818f7c5e62fd58a0'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9742001b0b55b2a5-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 15:30:06,477 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 15:30:06,477 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 15:30:06,478 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 15:30:06,478 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 15:30:06,478 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 15:30:06,478 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 24 Aug 2025 10:00:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '2746', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2821', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999242', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_23e5500c0f0a4974818f7c5e62fd58a0', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9742001b0b55b2a5-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-24 15:30:06,478 - openai._base_client - DEBUG - request_id: req_23e5500c0f0a4974818f7c5e62fd58a0
2025-08-24 15:30:06,490 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 15:30:06,490 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 15:30:06,490 - slackbot.services.summarizer_service - INFO -   Processing 4/4: ATLAS: Decoupling Skeletal and Shape Parameters fo...
2025-08-24 15:30:06,490 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: ATLAS: Decoupling Skeletal and Shape Parameters fo...
2025-08-24 15:30:06,492 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f4c39616-e925-41b4-87ed-8caac7b0a6c1', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: ATLAS: Decoupling Skeletal and Shape Parameters for Expressive Parametric Human Modeling\nContent: Parametric body models offer expressive 3D representation of humans across a\nwide range of poses, shapes, and facial expressions, typically derived by\nlearning a basis over registered 3D meshes. However, existing human mesh\nmodeling approaches struggle to capture detailed variations across diverse body\nposes and shapes, largely due to limited training data diversity and\nrestrictive modeling assumptions. Moreover, the common paradigm first optimizes\nthe external body surface using a linear basis, then regresses internal\nskeletal joints from surface vertices. This approach introduces problematic\ndependencies between internal skeleton and outer soft tissue, limiting direct\ncontrol over body height and bone lengths. To address these issues, we present\nATLAS, a high-fidelity body model learned from 600k high-resolution scans\ncaptured using 240 synchronized cameras. Unlike previous methods, we explicitly\ndecouple the shape and skeleton bases by grounding our mesh representation in\nthe human skeleton. This decoupling enables enhanced shape expressivity,\nfine-grained customization of body attributes, and keypoint fitting independent\nof external soft-tissue characteristics. ATLAS outperforms existing methods by\nfitting unseen subjects in diverse poses more accurately, and quantitative\nevaluations show that our non-linear pose correctives more effectively capture\ncomplex poses compared to linear models.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 15:30:06,493 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 15:30:06,493 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 15:30:06,493 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 15:30:06,493 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 15:30:06,493 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 15:30:06,494 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 15:30:09,827 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:00:09 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'2919'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2941'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999247'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_be0d39e3994f46babc6a6d0b27c48079'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97420030bd4cb2a5-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 15:30:09,828 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 15:30:09,828 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 15:30:09,829 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 15:30:09,829 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 15:30:09,829 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 15:30:09,829 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 24 Aug 2025 10:00:09 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '2919', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2941', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999247', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_be0d39e3994f46babc6a6d0b27c48079', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '97420030bd4cb2a5-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-24 15:30:09,829 - openai._base_client - DEBUG - request_id: req_be0d39e3994f46babc6a6d0b27c48079
2025-08-24 15:30:09,855 - slackbot.summarizer.tldr_summarizer - ERROR - Error creating article TLDR with openai: Failed to parse ArticleTLDR from completion {"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., '2 min read')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: 'Beginner', 'Intermediate', or 'Advanced'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}. Got: 5 validation errors for ArticleTLDR
tldr
  Field required [type=missing, input_value={'description': 'Structur...ng_time', 'difficulty']}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
key_facts
  Field required [type=missing, input_value={'description': 'Structur...ng_time', 'difficulty']}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
why_matters
  Field required [type=missing, input_value={'description': 'Structur...ng_time', 'difficulty']}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
reading_time
  Field required [type=missing, input_value={'description': 'Structur...ng_time', 'difficulty']}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
difficulty
  Field required [type=missing, input_value={'description': 'Structur...ng_time', 'difficulty']}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.11/v/missing
For troubleshooting, visit: https://python.langchain.com/docs/troubleshooting/errors/OUTPUT_PARSING_FAILURE 
2025-08-24 15:30:09,855 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 15:30:09,855 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 15:30:09,856 - slackbot.services.summarizer_service - INFO - ‚úÖ Batch summarization complete: 4/4 successful
2025-08-24 15:30:09,856 - __main__ - WARNING -     ‚ö†Ô∏è Error processing summary 1: 'TLDRSummary' object has no attribute 'title'
2025-08-24 15:30:09,856 - __main__ - WARNING -     ‚ö†Ô∏è Error processing summary 2: 'TLDRSummary' object has no attribute 'title'
2025-08-24 15:30:09,856 - __main__ - WARNING -     ‚ö†Ô∏è Error processing summary 3: 'TLDRSummary' object has no attribute 'title'
2025-08-24 15:30:09,856 - __main__ - WARNING -     ‚ö†Ô∏è Error processing summary 4: 'TLDRSummary' object has no attribute 'title'
2025-08-24 15:30:09,856 - __main__ - INFO - ‚úÖ Successfully created 0 TLDR summaries
2025-08-24 15:30:09,857 - __main__ - ERROR - ‚ùå No summaries created, stopping
2025-08-24 15:30:09,857 - __main__ - ERROR - ‚ùå Briefly Bot failed
2025-08-24 15:30:10,039 - httpcore.connection - DEBUG - close.started
2025-08-24 15:30:10,039 - httpcore.connection - DEBUG - close.complete
2025-08-24 15:30:48,496 - __main__ - INFO - Briefly Bot logging initialized
2025-08-24 15:30:48,496 - __main__ - INFO - üöÄ Briefly Bot - AI/ML News Aggregator
2025-08-24 15:30:48,497 - __main__ - INFO - ==================================================
2025-08-24 15:30:48,497 - __main__ - INFO - üìÖ Started at: 2025-08-24 15:30:48
2025-08-24 15:30:48,497 - __main__ - INFO - üîß Dry run: Yes
2025-08-24 15:30:48,497 - __main__ - INFO - üìä Max articles: 4
2025-08-24 15:30:48,497 - __main__ - INFO - üß† LLM Provider: openai
2025-08-24 15:30:48,497 - __main__ - INFO - üì∫ Target channel: SLACK_CHANNEL_ID env var
2025-08-24 15:30:48,497 - __main__ - INFO - ==================================================
2025-08-24 15:30:48,497 - __main__ - INFO - üöÄ Starting Briefly Bot...
2025-08-24 15:30:48,497 - __main__ - INFO - ============================================================
2025-08-24 15:30:48,497 - __main__ - INFO - üîß Step 1: Initializing components...
2025-08-24 15:30:48,497 - __main__ - INFO - ----------------------------------------
2025-08-24 15:30:48,498 - __main__ - INFO - üîß Initializing components...
2025-08-24 15:30:48,498 - slackbot.services.aggregation_service - INFO - Initializing AggregationService
2025-08-24 15:30:48,498 - slackbot.collectors.base_collector - INFO - Initialized collector: API News Collector
2025-08-24 15:30:48,506 - slackbot.collectors.api_collector - INFO - Loaded 8 sources from /home/dheeraj/projects/NewsFinderBot/slackbot/collectors/sources/api_sources_config.yaml
2025-08-24 15:30:48,506 - slackbot.collectors.api_collector - INFO - NewsAPI client initialized successfully
2025-08-24 15:30:48,506 - slackbot.collectors.api_collector - INFO - ArXiv client available
2025-08-24 15:30:48,506 - slackbot.services.aggregation_service - INFO - ‚úÖ API collector initialized successfully
2025-08-24 15:30:48,506 - slackbot.collectors.base_collector - INFO - Initialized CollectorManager
2025-08-24 15:30:48,506 - slackbot.services.aggregation_service - INFO - üìä AggregationService initialized with 1 collectors
2025-08-24 15:30:48,506 - __main__ - INFO - ‚úÖ AggregationService initialized
2025-08-24 15:30:48,506 - slackbot.services.summarizer_service - INFO - Initializing SummarizerService with provider: openai
2025-08-24 15:30:48,982 - slackbot.summarizer.tldr_summarizer - INFO - Initialized OpenAI TLDR summarizer with model: gpt-3.5-turbo
2025-08-24 15:30:48,998 - slackbot.summarizer.tldr_summarizer - INFO - Initialized Gemini fallback with model: gemini-1.5-flash
2025-08-24 15:30:48,998 - slackbot.services.summarizer_service - INFO - ‚úÖ Summarizer initialized successfully with openai
2025-08-24 15:30:48,998 - __main__ - INFO - ‚úÖ SummarizerService initialized
2025-08-24 15:30:48,999 - slackbot.services.publisher_service - INFO - Initializing PublisherService with default platform: slack
2025-08-24 15:30:49,112 - slack_bolt.App - DEBUG - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.23.0 Python/3.11.13 slackclient/3.36.0 Linux/6.8.0-65-generic'}
2025-08-24 15:30:49,658 - slack_bolt.App - DEBUG - Received the following response - status: 200, headers: {'date': 'Sun, 24 Aug 2025 10:00:49 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '3a43dc8d9a9b0d3a68474e4149d4c36c', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'chat:write,files:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKri0Q1_aRIgr5jwnokLvQAAADw', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '208', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-rfmynfgp,envoy-edge-bom-zlsgjfyx', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '237', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-gjdo', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https:\/\/keyvaluesystems.slack.com\/","team":"KeyValue Software Systems","user":"briefly","team_id":"T4LJBDMDY","user_id":"U09BG266092","bot_id":"B09BG26606Q","is_enterprise_install":false}
2025-08-24 15:30:49,658 - slackbot.slack.publisher - INFO - Slack publisher initialized successfully
2025-08-24 15:30:49,658 - slackbot.services.publisher_service - INFO - ‚úÖ Slack publisher initialized successfully
2025-08-24 15:30:49,658 - slackbot.services.publisher_service - INFO - üì§ PublisherService initialized with 1 publishers
2025-08-24 15:30:49,658 - __main__ - INFO - ‚úÖ PublisherService initialized
2025-08-24 15:30:49,658 - __main__ - INFO - ‚úÖ All components initialized successfully
2025-08-24 15:30:49,658 - __main__ - INFO - 
üì∞ Step 2: Collecting News
2025-08-24 15:30:49,659 - __main__ - INFO - ----------------------------------------
2025-08-24 15:30:49,659 - __main__ - INFO - üîç Starting news collection...
2025-08-24 15:30:49,659 - slackbot.services.aggregation_service - INFO - üéØ Collecting 4 articles with balanced sources: True
2025-08-24 15:30:49,659 - slackbot.services.aggregation_service - INFO - üîç Collecting from api
2025-08-24 15:30:52,235 - slackbot.collectors.api_collector - INFO - Fetched 20 papers from ArXiv AI Papers
2025-08-24 15:30:52,931 - slackbot.collectors.api_collector - INFO - Fetched 5 papers from ArXiv Computer Vision
2025-08-24 15:30:53,366 - slackbot.collectors.api_collector - INFO - Fetched 2 papers from ArXiv NLP Papers
2025-08-24 15:30:53,727 - slackbot.collectors.api_collector - INFO - Fetched 1 papers from ArXiv Robotics
2025-08-24 15:30:53,730 - slackbot.collectors.api_collector - INFO - NewsAPI params for Tech News AI: {'q': 'AI', 'category': 'technology', 'language': 'en', 'country': 'us', 'page_size': 15}
2025-08-24 15:30:55,119 - slackbot.collectors.api_collector - INFO - NewsAPI response for Tech News AI: status=ok, totalResults=13, articles=13
2025-08-24 15:30:55,119 - slackbot.collectors.api_collector - INFO - Fetched 13 articles from Tech News AI
2025-08-24 15:30:55,120 - slackbot.collectors.api_collector - INFO - NewsAPI params for Business AI News: {'q': 'AI', 'category': 'business', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-24 15:30:55,430 - slackbot.collectors.api_collector - INFO - NewsAPI response for Business AI News: status=ok, totalResults=14, articles=9
2025-08-24 15:30:55,430 - slackbot.collectors.api_collector - INFO - Fetched 9 articles from Business AI News
2025-08-24 15:30:55,433 - slackbot.collectors.api_collector - INFO - NewsAPI params for Science AI News: {'q': 'AI', 'category': 'science', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-24 15:30:56,431 - slackbot.collectors.api_collector - INFO - NewsAPI response for Science AI News: status=ok, totalResults=14, articles=10
2025-08-24 15:30:56,431 - slackbot.collectors.api_collector - INFO - Fetched 10 articles from Science AI News
2025-08-24 15:30:56,432 - slackbot.collectors.api_collector - INFO - NewsAPI params for Health AI News: {'q': 'AI', 'category': 'health', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-24 15:30:56,981 - slackbot.collectors.api_collector - INFO - NewsAPI response for Health AI News: status=ok, totalResults=37, articles=8
2025-08-24 15:30:56,981 - slackbot.collectors.api_collector - INFO - Fetched 8 articles from Health AI News
2025-08-24 15:30:56,982 - slackbot.collectors.api_collector - INFO - Limited results to 20 items (balanced: 10 ArXiv, 10 NewsAPI)
2025-08-24 15:30:56,982 - slackbot.collectors.api_collector - INFO - Collected 20 total items from API News Collector
2025-08-24 15:30:56,982 - slackbot.services.aggregation_service - INFO - ‚úÖ Collected 20 articles from api
2025-08-24 15:30:56,982 - slackbot.services.aggregation_service - INFO - üìä api: collected 4 articles
2025-08-24 15:30:56,982 - slackbot.services.aggregation_service - INFO - ‚úÖ Balanced collection complete: 4 articles from 1 sources
2025-08-24 15:30:56,982 - __main__ - INFO - ‚úÖ Successfully collected 4 articles
2025-08-24 15:30:56,982 - __main__ - INFO -   1. Scaling Group Inference for Diverse and High-Quality Generat...
2025-08-24 15:30:56,982 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-24 15:30:56,982 - __main__ - INFO -      Category: Research Papers
2025-08-24 15:30:56,982 - __main__ - INFO -   2. Visual Autoregressive Modeling for Instruction-Guided Image ...
2025-08-24 15:30:56,983 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-24 15:30:56,983 - __main__ - INFO -      Category: Research Papers
2025-08-24 15:30:56,983 - __main__ - INFO -   3. SceneGen: Single-Image 3D Scene Generation in One Feedforwar...
2025-08-24 15:30:56,983 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-24 15:30:56,983 - __main__ - INFO -      Category: Research Papers
2025-08-24 15:30:56,983 - __main__ - INFO - 
üß† Step 3: Creating TLDR Summaries
2025-08-24 15:30:56,983 - __main__ - INFO - ----------------------------------------
2025-08-24 15:30:56,983 - __main__ - INFO - üß† Starting TLDR summarization...
2025-08-24 15:30:56,983 - slackbot.services.summarizer_service - INFO - üéØ Using summarization strategy: individual
2025-08-24 15:30:56,983 - slackbot.services.summarizer_service - INFO - üìù Batch summarizing 4 articles
2025-08-24 15:30:56,983 - slackbot.services.summarizer_service - INFO -   Processing 1/4: Scaling Group Inference for Diverse and High-Quali...
2025-08-24 15:30:56,984 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Scaling Group Inference for Diverse and High-Quali...
2025-08-24 15:30:56,997 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-5acc0299-b31a-4fbb-95ca-a3721455fd9b', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Scaling Group Inference for Diverse and High-Quality Generation\nContent: Generative models typically sample outputs independently, and recent\ninference-time guidance and scaling algorithms focus on improving the quality\nof individual samples. However, in real-world applications, users are often\npresented with a set of multiple images (e.g., 4-8) for each prompt, where\nindependent sampling tends to lead to redundant results, limiting user choices\nand hindering idea exploration. In this work, we introduce a scalable group\ninference method that improves both the diversity and quality of a group of\nsamples. We formulate group inference as a quadratic integer assignment\nproblem: candidate outputs are modeled as graph nodes, and a subset is selected\nto optimize sample quality (unary term) while maximizing group diversity\n(binary term). To substantially improve runtime efficiency, we progressively\nprune the candidate set using intermediate predictions, allowing our method to\nscale up to large candidate sets. Extensive experiments show that our method\nsignificantly improves group diversity and quality compared to independent\nsampling baselines and recent inference algorithms. Our framework generalizes\nacross a wide range of tasks, including text-to-image, image-to-image, image\nprompting, and video generation, enabling generative models to treat multiple\noutputs as cohesive groups rather than independent samples.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 15:30:57,003 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 15:30:57,004 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-08-24 15:30:57,053 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x73ea843efe90>
2025-08-24 15:30:57,054 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x73ea86219fd0> server_hostname='api.openai.com' timeout=None
2025-08-24 15:30:57,075 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x73ea843edad0>
2025-08-24 15:30:57,075 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 15:30:57,076 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 15:30:57,076 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 15:30:57,076 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 15:30:57,076 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 15:30:59,675 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:00:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1858'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2056'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999268'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_b20fe52154c84951b94739dd04de0140'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=7nqsWzyNNGIxisQq6VNKgpxCF2qYR_hQCpp5fzwel88-1756029659-1.0.1.1-LdZeG0KIUT2s.21ZHZBu7rzbDUdwBI71CE6OmnWUV3G0g_wOUQP6QwWUaRU1ZsOxqJIEmotfhpLYF5dmAGNnYrMgixI.zYOanlRd65SQQqA; path=/; expires=Sun, 24-Aug-25 10:30:59 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=KBG1wd5DeaT2Ukczk4T73cWFIRJfGjjkL_5WjRiZYLs-1756029659678-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9742016cdbcd7fcd-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 15:30:59,676 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 15:30:59,676 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 15:30:59,681 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 15:30:59,681 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 15:30:59,681 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 15:30:59,681 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sun, 24 Aug 2025 10:00:59 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'keyvalue-rtv23o'), ('openai-processing-ms', '1858'), ('openai-project', 'proj_whQdFja0l3II6fu7PPtC7wv5'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '2056'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '50000000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '49999268'), ('x-ratelimit-reset-requests', '6ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_b20fe52154c84951b94739dd04de0140'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=7nqsWzyNNGIxisQq6VNKgpxCF2qYR_hQCpp5fzwel88-1756029659-1.0.1.1-LdZeG0KIUT2s.21ZHZBu7rzbDUdwBI71CE6OmnWUV3G0g_wOUQP6QwWUaRU1ZsOxqJIEmotfhpLYF5dmAGNnYrMgixI.zYOanlRd65SQQqA; path=/; expires=Sun, 24-Aug-25 10:30:59 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=KBG1wd5DeaT2Ukczk4T73cWFIRJfGjjkL_5WjRiZYLs-1756029659678-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '9742016cdbcd7fcd-MAA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-08-24 15:30:59,681 - openai._base_client - DEBUG - request_id: req_b20fe52154c84951b94739dd04de0140
2025-08-24 15:30:59,698 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 15:30:59,698 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 15:30:59,698 - slackbot.services.summarizer_service - INFO -   Processing 2/4: Visual Autoregressive Modeling for Instruction-Gui...
2025-08-24 15:30:59,698 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Visual Autoregressive Modeling for Instruction-Gui...
2025-08-24 15:30:59,701 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1f34349f-be29-4301-b09b-152d7e95382d', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Visual Autoregressive Modeling for Instruction-Guided Image Editing\nContent: Recent advances in diffusion models have brought remarkable visual fidelity\nto instruction-guided image editing. However, their global denoising process\ninherently entangles the edited region with the entire image context, leading\nto unintended spurious modifications and compromised adherence to editing\ninstructions. In contrast, autoregressive models offer a distinct paradigm by\nformulating image synthesis as a sequential process over discrete visual\ntokens. Their causal and compositional mechanism naturally circumvents the\nadherence challenges of diffusion-based methods. In this paper, we present\nVAREdit, a visual autoregressive (VAR) framework that reframes image editing as\na next-scale prediction problem. Conditioned on source image features and text\ninstructions, VAREdit generates multi-scale target features to achieve precise\nedits. A core challenge in this paradigm is how to effectively condition the\nsource image tokens. We observe that finest-scale source features cannot\neffectively guide the prediction of coarser target features. To bridge this\ngap, we introduce a Scale-Aligned Reference (SAR) module, which injects\nscale-matched conditioning information into the first self-attention layer.\nVAREdit demonstrates significant advancements in both editing adherence and\nefficiency. On standard benchmarks, it outperforms leading diffusion-based\nmethods by 30\\%+ higher GPT-Balance score. Moreover, it completes a\n$512\\times512$ editing in 1.2 seconds, making it 2.2$\\times$ faster than the\nsimilarly sized UltraEdit. The models are available at\nhttps://github.com/HiDream-ai/VAREdit.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 15:30:59,701 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 15:30:59,702 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 15:30:59,702 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 15:30:59,702 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 15:30:59,703 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 15:30:59,703 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 15:31:02,491 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:01:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'2288'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2307'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999205'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_18b36acced1d418388b0fd232a9bb68e'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9742017d4c357fcd-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 15:31:02,492 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 15:31:02,492 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 15:31:02,492 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 15:31:02,492 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 15:31:02,493 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 15:31:02,493 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 24 Aug 2025 10:01:02 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '2288', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2307', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999205', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_18b36acced1d418388b0fd232a9bb68e', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9742017d4c357fcd-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-24 15:31:02,493 - openai._base_client - DEBUG - request_id: req_18b36acced1d418388b0fd232a9bb68e
2025-08-24 15:31:02,506 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 15:31:02,506 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 15:31:02,506 - slackbot.services.summarizer_service - INFO -   Processing 3/4: SceneGen: Single-Image 3D Scene Generation in One ...
2025-08-24 15:31:02,506 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: SceneGen: Single-Image 3D Scene Generation in One ...
2025-08-24 15:31:02,509 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-bd8a0063-8941-4533-a7b8-71461faba545', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: SceneGen: Single-Image 3D Scene Generation in One Feedforward Pass\nContent: 3D content generation has recently attracted significant research interest\ndue to its applications in VR/AR and embodied AI. In this work, we address the\nchallenging task of synthesizing multiple 3D assets within a single scene\nimage. Concretely, our contributions are fourfold: (i) we present SceneGen, a\nnovel framework that takes a scene image and corresponding object masks as\ninput, simultaneously producing multiple 3D assets with geometry and texture.\nNotably, SceneGen operates with no need for optimization or asset retrieval;\n(ii) we introduce a novel feature aggregation module that integrates local and\nglobal scene information from visual and geometric encoders within the feature\nextraction module. Coupled with a position head, this enables the generation of\n3D assets and their relative spatial positions in a single feedforward pass;\n(iii) we demonstrate SceneGen\'s direct extensibility to multi-image input\nscenarios. Despite being trained solely on single-image inputs, our\narchitectural design enables improved generation performance with multi-image\ninputs; and (iv) extensive quantitative and qualitative evaluations confirm the\nefficiency and robust generation abilities of our approach. We believe this\nparadigm offers a novel solution for high-quality 3D content generation,\npotentially advancing its practical applications in downstream tasks. The code\nand model will be publicly available at: https://mengmouxu.github.io/SceneGen.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 15:31:02,510 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 15:31:02,510 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 15:31:02,510 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 15:31:02,510 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 15:31:02,511 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 15:31:02,511 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 15:31:04,539 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:01:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1567'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1591'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999243'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_02ce0d3933b14de495e5c1bda97e4211'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9742018edb1a7fcd-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 15:31:04,540 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 15:31:04,541 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 15:31:04,541 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 15:31:04,542 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 15:31:04,542 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 15:31:04,542 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 24 Aug 2025 10:01:04 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1567', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1591', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999243', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_02ce0d3933b14de495e5c1bda97e4211', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9742018edb1a7fcd-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-24 15:31:04,542 - openai._base_client - DEBUG - request_id: req_02ce0d3933b14de495e5c1bda97e4211
2025-08-24 15:31:04,569 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 15:31:04,569 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 15:31:04,569 - slackbot.services.summarizer_service - INFO -   Processing 4/4: ATLAS: Decoupling Skeletal and Shape Parameters fo...
2025-08-24 15:31:04,570 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: ATLAS: Decoupling Skeletal and Shape Parameters fo...
2025-08-24 15:31:04,576 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-7b343610-fc12-4d22-b68a-51c488353c2a', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: ATLAS: Decoupling Skeletal and Shape Parameters for Expressive Parametric Human Modeling\nContent: Parametric body models offer expressive 3D representation of humans across a\nwide range of poses, shapes, and facial expressions, typically derived by\nlearning a basis over registered 3D meshes. However, existing human mesh\nmodeling approaches struggle to capture detailed variations across diverse body\nposes and shapes, largely due to limited training data diversity and\nrestrictive modeling assumptions. Moreover, the common paradigm first optimizes\nthe external body surface using a linear basis, then regresses internal\nskeletal joints from surface vertices. This approach introduces problematic\ndependencies between internal skeleton and outer soft tissue, limiting direct\ncontrol over body height and bone lengths. To address these issues, we present\nATLAS, a high-fidelity body model learned from 600k high-resolution scans\ncaptured using 240 synchronized cameras. Unlike previous methods, we explicitly\ndecouple the shape and skeleton bases by grounding our mesh representation in\nthe human skeleton. This decoupling enables enhanced shape expressivity,\nfine-grained customization of body attributes, and keypoint fitting independent\nof external soft-tissue characteristics. ATLAS outperforms existing methods by\nfitting unseen subjects in diverse poses more accurately, and quantitative\nevaluations show that our non-linear pose correctives more effectively capture\ncomplex poses compared to linear models.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 15:31:04,578 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 15:31:04,578 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 15:31:04,579 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 15:31:04,579 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 15:31:04,580 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 15:31:04,580 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 15:31:06,996 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:01:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1328'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1521'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999247'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_d1e3f08e84d146079e2589810e581ad5'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9742019bbefd7fcd-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 15:31:06,997 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 15:31:06,997 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 15:31:06,997 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 15:31:06,998 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 15:31:06,998 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 15:31:06,998 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 24 Aug 2025 10:01:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1328', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1521', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999247', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_d1e3f08e84d146079e2589810e581ad5', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9742019bbefd7fcd-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-24 15:31:06,998 - openai._base_client - DEBUG - request_id: req_d1e3f08e84d146079e2589810e581ad5
2025-08-24 15:31:07,010 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 15:31:07,010 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 15:31:07,010 - slackbot.services.summarizer_service - INFO - ‚úÖ Batch summarization complete: 4/4 successful
2025-08-24 15:31:07,010 - __main__ - INFO - ‚úÖ Successfully created 4 TLDR summaries
2025-08-24 15:31:07,010 - __main__ - INFO - 
üí¨ Step 4: Creating Slack Message
2025-08-24 15:31:07,010 - __main__ - INFO - ----------------------------------------
2025-08-24 15:31:07,010 - __main__ - INFO - üí¨ Creating Slack message...
2025-08-24 15:31:07,010 - __main__ - INFO - ‚úÖ Slack message created with 11 blocks
2025-08-24 15:31:07,011 - __main__ - INFO - 
üì§ Step 5: Publishing to Slack
2025-08-24 15:31:07,011 - __main__ - INFO - ----------------------------------------
2025-08-24 15:31:07,011 - __main__ - INFO - üîç DRY RUN: Would publish to Slack
2025-08-24 15:31:07,011 - __main__ - INFO -    Channel: C09AUAZCQR1
2025-08-24 15:31:07,011 - __main__ - INFO -    Message blocks: 11
2025-08-24 15:31:07,011 - __main__ - INFO - 
üéâ Briefly Bot completed successfully!
2025-08-24 15:31:07,011 - __main__ - INFO - üìä Summary:
2025-08-24 15:31:07,011 - __main__ - INFO -   ‚Ä¢ Articles collected: 4
2025-08-24 15:31:07,011 - __main__ - INFO -   ‚Ä¢ TLDR summaries created: 4
2025-08-24 15:31:07,011 - __main__ - INFO -   ‚Ä¢ Published to Slack: DRY RUN
2025-08-24 15:31:07,011 - __main__ - INFO - ‚úÖ Briefly Bot completed successfully
2025-08-24 15:31:07,169 - httpcore.connection - DEBUG - close.started
2025-08-24 15:31:07,169 - httpcore.connection - DEBUG - close.complete
2025-08-24 15:43:45,463 - __main__ - INFO - Briefly Bot logging initialized
2025-08-24 15:43:45,463 - __main__ - INFO - üöÄ Briefly Bot - AI/ML News Aggregator
2025-08-24 15:43:45,463 - __main__ - INFO - ==================================================
2025-08-24 15:43:45,463 - __main__ - INFO - üìÖ Started at: 2025-08-24 15:43:45
2025-08-24 15:43:45,464 - __main__ - INFO - üîß Dry run: Yes
2025-08-24 15:43:45,464 - __main__ - INFO - üìä Max articles: 4
2025-08-24 15:43:45,464 - __main__ - INFO - üß† LLM Provider: openai
2025-08-24 15:43:45,464 - __main__ - INFO - üì∫ Target channel: C09AUAZCQR1
2025-08-24 15:43:45,464 - __main__ - INFO - ==================================================
2025-08-24 15:43:45,464 - __main__ - INFO - üöÄ Starting Briefly Bot...
2025-08-24 15:43:45,464 - __main__ - INFO - ============================================================
2025-08-24 15:43:45,464 - __main__ - INFO - üîß Initializing services...
2025-08-24 15:43:45,464 - slackbot.services.aggregation_service - INFO - Initializing AggregationService
2025-08-24 15:43:45,464 - slackbot.collectors.base_collector - INFO - Initialized collector: API News Collector
2025-08-24 15:43:45,473 - slackbot.collectors.api_collector - INFO - Loaded 8 sources from /home/dheeraj/projects/NewsFinderBot/slackbot/collectors/sources/api_sources_config.yaml
2025-08-24 15:43:45,473 - slackbot.collectors.api_collector - INFO - NewsAPI client initialized successfully
2025-08-24 15:43:45,474 - slackbot.collectors.api_collector - INFO - ArXiv client available
2025-08-24 15:43:45,474 - slackbot.services.aggregation_service - INFO - ‚úÖ API collector initialized successfully
2025-08-24 15:43:45,474 - slackbot.collectors.base_collector - INFO - Initialized CollectorManager
2025-08-24 15:43:45,474 - slackbot.services.aggregation_service - INFO - üìä AggregationService initialized with 1 collectors
2025-08-24 15:43:45,474 - slackbot.services.summarizer_service - INFO - Initializing SummarizerService with provider: openai
2025-08-24 15:43:45,901 - slackbot.summarizer.tldr_summarizer - INFO - Initialized OpenAI TLDR summarizer with model: gpt-3.5-turbo
2025-08-24 15:43:45,917 - slackbot.summarizer.tldr_summarizer - INFO - Initialized Gemini fallback with model: gemini-1.5-flash
2025-08-24 15:43:45,917 - slackbot.services.summarizer_service - INFO - ‚úÖ Summarizer initialized successfully with openai
2025-08-24 15:43:45,917 - slackbot.services.publisher_service - INFO - Initializing PublisherService with default platform: slack
2025-08-24 15:43:46,045 - slack_bolt.App - DEBUG - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.23.0 Python/3.11.13 slackclient/3.36.0 Linux/6.8.0-65-generic'}
2025-08-24 15:43:46,558 - slack_bolt.App - DEBUG - Received the following response - status: 200, headers: {'date': 'Sun, 24 Aug 2025 10:13:46 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '042de0ff7d08485b58abb46eb4e57cae', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'chat:write,files:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKrl2hG1FjajV1dPNnmgAQAAAAg', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '208', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-fcklfyfx,envoy-edge-bom-bmqczzgw', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '225', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-tphv', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https:\/\/keyvaluesystems.slack.com\/","team":"KeyValue Software Systems","user":"briefly","team_id":"T4LJBDMDY","user_id":"U09BG266092","bot_id":"B09BG26606Q","is_enterprise_install":false}
2025-08-24 15:43:46,559 - slackbot.slack.publisher - INFO - Slack publisher initialized successfully
2025-08-24 15:43:46,559 - slackbot.services.publisher_service - INFO - ‚úÖ Slack publisher initialized successfully
2025-08-24 15:43:46,559 - slackbot.services.publisher_service - INFO - üì§ PublisherService initialized with 1 publishers
2025-08-24 15:43:46,559 - __main__ - INFO - ‚úÖ All services initialized successfully
2025-08-24 15:43:46,559 - __main__ - INFO - 
üì∞ Step 2: Collecting News
2025-08-24 15:43:46,559 - __main__ - INFO - ----------------------------------------
2025-08-24 15:43:46,560 - __main__ - INFO - üîç Starting news collection...
2025-08-24 15:43:46,560 - slackbot.services.aggregation_service - INFO - üéØ Collecting 4 articles with balanced sources: True
2025-08-24 15:43:46,560 - slackbot.services.aggregation_service - INFO - üîç Collecting from api
2025-08-24 15:43:48,806 - slackbot.collectors.api_collector - INFO - Fetched 20 papers from ArXiv AI Papers
2025-08-24 15:43:49,509 - slackbot.collectors.api_collector - INFO - Fetched 5 papers from ArXiv Computer Vision
2025-08-24 15:43:49,929 - slackbot.collectors.api_collector - INFO - Fetched 2 papers from ArXiv NLP Papers
2025-08-24 15:43:50,283 - slackbot.collectors.api_collector - INFO - Fetched 1 papers from ArXiv Robotics
2025-08-24 15:43:50,284 - slackbot.collectors.api_collector - INFO - NewsAPI params for Tech News AI: {'q': 'AI', 'category': 'technology', 'language': 'en', 'country': 'us', 'page_size': 15}
2025-08-24 15:43:50,885 - slackbot.collectors.api_collector - INFO - NewsAPI response for Tech News AI: status=ok, totalResults=13, articles=13
2025-08-24 15:43:50,885 - slackbot.collectors.api_collector - INFO - Fetched 13 articles from Tech News AI
2025-08-24 15:43:50,886 - slackbot.collectors.api_collector - INFO - NewsAPI params for Business AI News: {'q': 'AI', 'category': 'business', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-24 15:43:51,440 - slackbot.collectors.api_collector - INFO - NewsAPI response for Business AI News: status=ok, totalResults=14, articles=9
2025-08-24 15:43:51,440 - slackbot.collectors.api_collector - INFO - Fetched 9 articles from Business AI News
2025-08-24 15:43:51,440 - slackbot.collectors.api_collector - INFO - NewsAPI params for Science AI News: {'q': 'AI', 'category': 'science', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-24 15:43:52,728 - slackbot.collectors.api_collector - INFO - NewsAPI response for Science AI News: status=ok, totalResults=14, articles=10
2025-08-24 15:43:52,729 - slackbot.collectors.api_collector - INFO - Fetched 10 articles from Science AI News
2025-08-24 15:43:52,730 - slackbot.collectors.api_collector - INFO - NewsAPI params for Health AI News: {'q': 'AI', 'category': 'health', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-24 15:43:53,138 - slackbot.collectors.api_collector - INFO - NewsAPI response for Health AI News: status=ok, totalResults=37, articles=8
2025-08-24 15:43:53,139 - slackbot.collectors.api_collector - INFO - Fetched 8 articles from Health AI News
2025-08-24 15:43:53,139 - slackbot.collectors.api_collector - INFO - Limited results to 20 items (balanced: 10 ArXiv, 10 NewsAPI)
2025-08-24 15:43:53,139 - slackbot.collectors.api_collector - INFO - Collected 20 total items from API News Collector
2025-08-24 15:43:53,139 - slackbot.services.aggregation_service - INFO - ‚úÖ Collected 20 articles from api
2025-08-24 15:43:53,140 - slackbot.services.aggregation_service - INFO - üìä api: collected 4 articles
2025-08-24 15:43:53,140 - slackbot.services.aggregation_service - INFO - ‚úÖ Balanced collection complete: 4 articles from 1 sources
2025-08-24 15:43:53,140 - __main__ - INFO - ‚úÖ Successfully collected 4 articles
2025-08-24 15:43:53,140 - __main__ - INFO -   1. Scaling Group Inference for Diverse and High-Quality Generat...
2025-08-24 15:43:53,140 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-24 15:43:53,140 - __main__ - INFO -      Category: Research Papers
2025-08-24 15:43:53,140 - __main__ - INFO -   2. Visual Autoregressive Modeling for Instruction-Guided Image ...
2025-08-24 15:43:53,140 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-24 15:43:53,140 - __main__ - INFO -      Category: Research Papers
2025-08-24 15:43:53,140 - __main__ - INFO -   3. SceneGen: Single-Image 3D Scene Generation in One Feedforwar...
2025-08-24 15:43:53,140 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-24 15:43:53,140 - __main__ - INFO -      Category: Research Papers
2025-08-24 15:43:53,140 - __main__ - INFO - 
üß† Step 3: Creating TLDR Summaries
2025-08-24 15:43:53,141 - __main__ - INFO - ----------------------------------------
2025-08-24 15:43:53,141 - __main__ - INFO - üß† Starting TLDR summarization...
2025-08-24 15:43:53,141 - slackbot.services.summarizer_service - INFO - üéØ Using summarization strategy: individual
2025-08-24 15:43:53,141 - slackbot.services.summarizer_service - INFO - üìù Batch summarizing 4 articles
2025-08-24 15:43:53,141 - slackbot.services.summarizer_service - INFO -   Processing 1/4: Scaling Group Inference for Diverse and High-Quali...
2025-08-24 15:43:53,141 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Scaling Group Inference for Diverse and High-Quali...
2025-08-24 15:43:53,155 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4513cc37-1141-45d9-bf74-d40f255eae26', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Scaling Group Inference for Diverse and High-Quality Generation\nContent: Generative models typically sample outputs independently, and recent\ninference-time guidance and scaling algorithms focus on improving the quality\nof individual samples. However, in real-world applications, users are often\npresented with a set of multiple images (e.g., 4-8) for each prompt, where\nindependent sampling tends to lead to redundant results, limiting user choices\nand hindering idea exploration. In this work, we introduce a scalable group\ninference method that improves both the diversity and quality of a group of\nsamples. We formulate group inference as a quadratic integer assignment\nproblem: candidate outputs are modeled as graph nodes, and a subset is selected\nto optimize sample quality (unary term) while maximizing group diversity\n(binary term). To substantially improve runtime efficiency, we progressively\nprune the candidate set using intermediate predictions, allowing our method to\nscale up to large candidate sets. Extensive experiments show that our method\nsignificantly improves group diversity and quality compared to independent\nsampling baselines and recent inference algorithms. Our framework generalizes\nacross a wide range of tasks, including text-to-image, image-to-image, image\nprompting, and video generation, enabling generative models to treat multiple\noutputs as cohesive groups rather than independent samples.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 15:43:53,166 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 15:43:53,167 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-08-24 15:43:53,190 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x75bfe0580910>
2025-08-24 15:43:53,191 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x75bfe3b19d00> server_hostname='api.openai.com' timeout=None
2025-08-24 15:43:53,212 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x75bfe0582c50>
2025-08-24 15:43:53,212 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 15:43:53,213 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 15:43:53,213 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 15:43:53,213 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 15:43:53,213 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 15:43:55,528 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:13:55 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1927'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1954'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999269'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_35e5f5479067439eb78322ce4ec4aea7'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=bRA7t6s1SRvFLWjE4Jpi.PBtMGr3NEheSPsxrI8kGgE-1756030435-1.0.1.1-RT9dZzugqX8uaE0uktREXiwsvM3aaHQKbYC9pB0w72kwkqPpMTADmkyU4lh.2S3WevfLXBcFqxGTqdVobPFKVN8WFcKzCKSx1pqUr5rh0Cw; path=/; expires=Sun, 24-Aug-25 10:43:55 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=FXPfPFnmSHNjyF4MpXHkOkUXAXSjkjRH58ypmSQIdIU-1756030435511-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9742145feca3913f-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 15:43:55,529 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 15:43:55,529 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 15:43:55,530 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 15:43:55,530 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 15:43:55,530 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 15:43:55,530 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sun, 24 Aug 2025 10:13:55 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'keyvalue-rtv23o'), ('openai-processing-ms', '1927'), ('openai-project', 'proj_whQdFja0l3II6fu7PPtC7wv5'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1954'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '50000000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '49999269'), ('x-ratelimit-reset-requests', '6ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_35e5f5479067439eb78322ce4ec4aea7'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=bRA7t6s1SRvFLWjE4Jpi.PBtMGr3NEheSPsxrI8kGgE-1756030435-1.0.1.1-RT9dZzugqX8uaE0uktREXiwsvM3aaHQKbYC9pB0w72kwkqPpMTADmkyU4lh.2S3WevfLXBcFqxGTqdVobPFKVN8WFcKzCKSx1pqUr5rh0Cw; path=/; expires=Sun, 24-Aug-25 10:43:55 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=FXPfPFnmSHNjyF4MpXHkOkUXAXSjkjRH58ypmSQIdIU-1756030435511-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '9742145feca3913f-MAA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-08-24 15:43:55,531 - openai._base_client - DEBUG - request_id: req_35e5f5479067439eb78322ce4ec4aea7
2025-08-24 15:43:55,559 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 15:43:55,559 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 15:43:55,559 - slackbot.services.summarizer_service - INFO -   Processing 2/4: Visual Autoregressive Modeling for Instruction-Gui...
2025-08-24 15:43:55,559 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Visual Autoregressive Modeling for Instruction-Gui...
2025-08-24 15:43:55,563 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-970d1f85-d1f8-43c4-a407-89911890433c', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Visual Autoregressive Modeling for Instruction-Guided Image Editing\nContent: Recent advances in diffusion models have brought remarkable visual fidelity\nto instruction-guided image editing. However, their global denoising process\ninherently entangles the edited region with the entire image context, leading\nto unintended spurious modifications and compromised adherence to editing\ninstructions. In contrast, autoregressive models offer a distinct paradigm by\nformulating image synthesis as a sequential process over discrete visual\ntokens. Their causal and compositional mechanism naturally circumvents the\nadherence challenges of diffusion-based methods. In this paper, we present\nVAREdit, a visual autoregressive (VAR) framework that reframes image editing as\na next-scale prediction problem. Conditioned on source image features and text\ninstructions, VAREdit generates multi-scale target features to achieve precise\nedits. A core challenge in this paradigm is how to effectively condition the\nsource image tokens. We observe that finest-scale source features cannot\neffectively guide the prediction of coarser target features. To bridge this\ngap, we introduce a Scale-Aligned Reference (SAR) module, which injects\nscale-matched conditioning information into the first self-attention layer.\nVAREdit demonstrates significant advancements in both editing adherence and\nefficiency. On standard benchmarks, it outperforms leading diffusion-based\nmethods by 30\\%+ higher GPT-Balance score. Moreover, it completes a\n$512\\times512$ editing in 1.2 seconds, making it 2.2$\\times$ faster than the\nsimilarly sized UltraEdit. The models are available at\nhttps://github.com/HiDream-ai/VAREdit.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 15:43:55,564 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 15:43:55,564 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 15:43:55,564 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 15:43:55,564 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 15:43:55,565 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 15:43:55,565 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 15:43:58,872 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:13:58 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'2454'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2692'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999205'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_60c221b2ad34477ead9c0c0b9dbd99bb'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9742146e9804913f-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 15:43:58,872 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 15:43:58,873 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 15:43:58,873 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 15:43:58,873 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 15:43:58,873 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 15:43:58,873 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 24 Aug 2025 10:13:58 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '2454', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2692', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999205', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_60c221b2ad34477ead9c0c0b9dbd99bb', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9742146e9804913f-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-24 15:43:58,873 - openai._base_client - DEBUG - request_id: req_60c221b2ad34477ead9c0c0b9dbd99bb
2025-08-24 15:43:58,888 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 15:43:58,888 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 15:43:58,888 - slackbot.services.summarizer_service - INFO -   Processing 3/4: SceneGen: Single-Image 3D Scene Generation in One ...
2025-08-24 15:43:58,888 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: SceneGen: Single-Image 3D Scene Generation in One ...
2025-08-24 15:43:58,892 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-26d21f5b-6d5d-4b96-88b3-662f16819138', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: SceneGen: Single-Image 3D Scene Generation in One Feedforward Pass\nContent: 3D content generation has recently attracted significant research interest\ndue to its applications in VR/AR and embodied AI. In this work, we address the\nchallenging task of synthesizing multiple 3D assets within a single scene\nimage. Concretely, our contributions are fourfold: (i) we present SceneGen, a\nnovel framework that takes a scene image and corresponding object masks as\ninput, simultaneously producing multiple 3D assets with geometry and texture.\nNotably, SceneGen operates with no need for optimization or asset retrieval;\n(ii) we introduce a novel feature aggregation module that integrates local and\nglobal scene information from visual and geometric encoders within the feature\nextraction module. Coupled with a position head, this enables the generation of\n3D assets and their relative spatial positions in a single feedforward pass;\n(iii) we demonstrate SceneGen\'s direct extensibility to multi-image input\nscenarios. Despite being trained solely on single-image inputs, our\narchitectural design enables improved generation performance with multi-image\ninputs; and (iv) extensive quantitative and qualitative evaluations confirm the\nefficiency and robust generation abilities of our approach. We believe this\nparadigm offers a novel solution for high-quality 3D content generation,\npotentially advancing its practical applications in downstream tasks. The code\nand model will be publicly available at: https://mengmouxu.github.io/SceneGen.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 15:43:58,893 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 15:43:58,894 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 15:43:58,894 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 15:43:58,894 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 15:43:58,894 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 15:43:58,894 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 15:44:01,739 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:14:01 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1864'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2426'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999243'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_303123fa89a949ef8a949bb3300dda6f'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97421483682d913f-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 15:44:01,740 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 15:44:01,740 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 15:44:01,740 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 15:44:01,740 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 15:44:01,740 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 15:44:01,741 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 24 Aug 2025 10:14:01 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1864', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2426', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999243', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_303123fa89a949ef8a949bb3300dda6f', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '97421483682d913f-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-24 15:44:01,741 - openai._base_client - DEBUG - request_id: req_303123fa89a949ef8a949bb3300dda6f
2025-08-24 15:44:01,759 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 15:44:01,759 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 15:44:01,759 - slackbot.services.summarizer_service - INFO -   Processing 4/4: ATLAS: Decoupling Skeletal and Shape Parameters fo...
2025-08-24 15:44:01,759 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: ATLAS: Decoupling Skeletal and Shape Parameters fo...
2025-08-24 15:44:01,763 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-d54ee7c3-a518-4b0e-a4ca-b4fd59b9dd74', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: ATLAS: Decoupling Skeletal and Shape Parameters for Expressive Parametric Human Modeling\nContent: Parametric body models offer expressive 3D representation of humans across a\nwide range of poses, shapes, and facial expressions, typically derived by\nlearning a basis over registered 3D meshes. However, existing human mesh\nmodeling approaches struggle to capture detailed variations across diverse body\nposes and shapes, largely due to limited training data diversity and\nrestrictive modeling assumptions. Moreover, the common paradigm first optimizes\nthe external body surface using a linear basis, then regresses internal\nskeletal joints from surface vertices. This approach introduces problematic\ndependencies between internal skeleton and outer soft tissue, limiting direct\ncontrol over body height and bone lengths. To address these issues, we present\nATLAS, a high-fidelity body model learned from 600k high-resolution scans\ncaptured using 240 synchronized cameras. Unlike previous methods, we explicitly\ndecouple the shape and skeleton bases by grounding our mesh representation in\nthe human skeleton. This decoupling enables enhanced shape expressivity,\nfine-grained customization of body attributes, and keypoint fitting independent\nof external soft-tissue characteristics. ATLAS outperforms existing methods by\nfitting unseen subjects in diverse poses more accurately, and quantitative\nevaluations show that our non-linear pose correctives more effectively capture\ncomplex poses compared to linear models.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 15:44:01,764 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 15:44:01,764 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 15:44:01,765 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 15:44:01,765 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 15:44:01,765 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 15:44:01,765 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 15:44:04,401 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:14:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1381'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1611'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999248'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_ffa4a2c4f124452289e5bbbd1322df08'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'974214955ed0913f-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 15:44:04,401 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 15:44:04,402 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 15:44:04,402 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 15:44:04,402 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 15:44:04,402 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 15:44:04,402 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 24 Aug 2025 10:14:04 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1381', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1611', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999248', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_ffa4a2c4f124452289e5bbbd1322df08', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '974214955ed0913f-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-24 15:44:04,402 - openai._base_client - DEBUG - request_id: req_ffa4a2c4f124452289e5bbbd1322df08
2025-08-24 15:44:04,411 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 15:44:04,411 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 15:44:04,412 - slackbot.services.summarizer_service - INFO - ‚úÖ Batch summarization complete: 4/4 successful
2025-08-24 15:44:04,412 - __main__ - INFO - ‚úÖ Successfully created 4 TLDR summaries
2025-08-24 15:44:04,412 - __main__ - INFO - 
üí¨ Step 4: Creating Slack Message
2025-08-24 15:44:04,412 - __main__ - INFO - ----------------------------------------
2025-08-24 15:44:04,412 - __main__ - INFO - üí¨ Creating Slack message...
2025-08-24 15:44:04,412 - __main__ - INFO - ‚úÖ Slack message created with 11 blocks
2025-08-24 15:44:04,412 - __main__ - INFO - 
üì§ Step 5: Publishing to Slack
2025-08-24 15:44:04,412 - __main__ - INFO - ----------------------------------------
2025-08-24 15:44:04,412 - __main__ - INFO - üîç DRY RUN: Would publish to Slack
2025-08-24 15:44:04,412 - __main__ - INFO -    Channel: C09AUAZCQR1
2025-08-24 15:44:04,412 - __main__ - INFO -    Message blocks: 11
2025-08-24 15:44:04,412 - __main__ - INFO - 
üéâ Briefly Bot completed successfully!
2025-08-24 15:44:04,412 - __main__ - INFO - üìä Summary:
2025-08-24 15:44:04,412 - __main__ - INFO -   ‚Ä¢ Articles collected: 4
2025-08-24 15:44:04,413 - __main__ - INFO -   ‚Ä¢ TLDR summaries created: 4
2025-08-24 15:44:04,413 - __main__ - INFO -   ‚Ä¢ Published to Slack: DRY RUN
2025-08-24 15:44:04,413 - __main__ - INFO - ‚úÖ Briefly Bot completed successfully
2025-08-24 15:44:04,639 - httpcore.connection - DEBUG - close.started
2025-08-24 15:44:04,640 - httpcore.connection - DEBUG - close.complete
2025-08-24 15:45:11,614 - __main__ - INFO - Briefly Bot logging initialized
2025-08-24 15:45:11,614 - __main__ - INFO - üöÄ Briefly Bot - AI/ML News Aggregator
2025-08-24 15:45:11,614 - __main__ - INFO - ==================================================
2025-08-24 15:45:11,614 - __main__ - INFO - üìÖ Started at: 2025-08-24 15:45:11
2025-08-24 15:45:11,614 - __main__ - INFO - üîß Dry run: No
2025-08-24 15:45:11,615 - __main__ - INFO - üìä Max articles: 4
2025-08-24 15:45:11,615 - __main__ - INFO - üß† LLM Provider: openai
2025-08-24 15:45:11,615 - __main__ - INFO - üì∫ Target channel: C09AUAZCQR1
2025-08-24 15:45:11,615 - __main__ - INFO - ==================================================
2025-08-24 15:45:11,615 - __main__ - INFO - üöÄ Starting Briefly Bot...
2025-08-24 15:45:11,615 - __main__ - INFO - ============================================================
2025-08-24 15:45:11,615 - __main__ - INFO - üîß Initializing services...
2025-08-24 15:45:11,615 - slackbot.services.aggregation_service - INFO - Initializing AggregationService
2025-08-24 15:45:11,616 - slackbot.collectors.base_collector - INFO - Initialized collector: API News Collector
2025-08-24 15:45:11,624 - slackbot.collectors.api_collector - INFO - Loaded 8 sources from /home/dheeraj/projects/NewsFinderBot/slackbot/collectors/sources/api_sources_config.yaml
2025-08-24 15:45:11,624 - slackbot.collectors.api_collector - INFO - NewsAPI client initialized successfully
2025-08-24 15:45:11,624 - slackbot.collectors.api_collector - INFO - ArXiv client available
2025-08-24 15:45:11,624 - slackbot.services.aggregation_service - INFO - ‚úÖ API collector initialized successfully
2025-08-24 15:45:11,624 - slackbot.collectors.base_collector - INFO - Initialized CollectorManager
2025-08-24 15:45:11,625 - slackbot.services.aggregation_service - INFO - üìä AggregationService initialized with 1 collectors
2025-08-24 15:45:11,625 - slackbot.services.summarizer_service - INFO - Initializing SummarizerService with provider: openai
2025-08-24 15:45:12,082 - slackbot.summarizer.tldr_summarizer - INFO - Initialized OpenAI TLDR summarizer with model: gpt-3.5-turbo
2025-08-24 15:45:12,099 - slackbot.summarizer.tldr_summarizer - INFO - Initialized Gemini fallback with model: gemini-1.5-flash
2025-08-24 15:45:12,099 - slackbot.services.summarizer_service - INFO - ‚úÖ Summarizer initialized successfully with openai
2025-08-24 15:45:12,099 - slackbot.services.publisher_service - INFO - Initializing PublisherService with default platform: slack
2025-08-24 15:45:12,241 - slack_bolt.App - DEBUG - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.23.0 Python/3.11.13 slackclient/3.36.0 Linux/6.8.0-65-generic'}
2025-08-24 15:45:13,216 - slack_bolt.App - DEBUG - Received the following response - status: 200, headers: {'date': 'Sun, 24 Aug 2025 10:15:13 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'c347af547454ac97d6d99fe6bd69e8d0', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'chat:write,files:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKrmMRvCy3PjpNzCZTWA6QAAAC8', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '208', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-bxkrpyjr,envoy-edge-bom-yiohfryc', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '229', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-pgmq', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https:\/\/keyvaluesystems.slack.com\/","team":"KeyValue Software Systems","user":"briefly","team_id":"T4LJBDMDY","user_id":"U09BG266092","bot_id":"B09BG26606Q","is_enterprise_install":false}
2025-08-24 15:45:13,216 - slackbot.slack.publisher - INFO - Slack publisher initialized successfully
2025-08-24 15:45:13,216 - slackbot.services.publisher_service - INFO - ‚úÖ Slack publisher initialized successfully
2025-08-24 15:45:13,216 - slackbot.services.publisher_service - INFO - üì§ PublisherService initialized with 1 publishers
2025-08-24 15:45:13,216 - __main__ - INFO - ‚úÖ All services initialized successfully
2025-08-24 15:45:13,216 - __main__ - INFO - 
üì∞ Step 2: Collecting News
2025-08-24 15:45:13,216 - __main__ - INFO - ----------------------------------------
2025-08-24 15:45:13,216 - __main__ - INFO - üîç Starting news collection...
2025-08-24 15:45:13,217 - slackbot.services.aggregation_service - INFO - üéØ Collecting 4 articles with balanced sources: True
2025-08-24 15:45:13,217 - slackbot.services.aggregation_service - INFO - üîç Collecting from api
2025-08-24 15:45:15,428 - slackbot.collectors.api_collector - INFO - Fetched 20 papers from ArXiv AI Papers
2025-08-24 15:45:16,125 - slackbot.collectors.api_collector - INFO - Fetched 5 papers from ArXiv Computer Vision
2025-08-24 15:45:16,533 - slackbot.collectors.api_collector - INFO - Fetched 2 papers from ArXiv NLP Papers
2025-08-24 15:45:16,850 - slackbot.collectors.api_collector - INFO - Fetched 1 papers from ArXiv Robotics
2025-08-24 15:45:16,851 - slackbot.collectors.api_collector - INFO - NewsAPI params for Tech News AI: {'q': 'AI', 'category': 'technology', 'language': 'en', 'country': 'us', 'page_size': 15}
2025-08-24 15:45:18,398 - slackbot.collectors.api_collector - INFO - NewsAPI response for Tech News AI: status=ok, totalResults=13, articles=13
2025-08-24 15:45:18,398 - slackbot.collectors.api_collector - INFO - Fetched 13 articles from Tech News AI
2025-08-24 15:45:18,399 - slackbot.collectors.api_collector - INFO - NewsAPI params for Business AI News: {'q': 'AI', 'category': 'business', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-24 15:45:18,896 - slackbot.collectors.api_collector - INFO - NewsAPI response for Business AI News: status=ok, totalResults=14, articles=9
2025-08-24 15:45:18,896 - slackbot.collectors.api_collector - INFO - Fetched 9 articles from Business AI News
2025-08-24 15:45:18,896 - slackbot.collectors.api_collector - INFO - NewsAPI params for Science AI News: {'q': 'AI', 'category': 'science', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-24 15:45:19,564 - slackbot.collectors.api_collector - INFO - NewsAPI response for Science AI News: status=ok, totalResults=14, articles=10
2025-08-24 15:45:19,564 - slackbot.collectors.api_collector - INFO - Fetched 10 articles from Science AI News
2025-08-24 15:45:19,565 - slackbot.collectors.api_collector - INFO - NewsAPI params for Health AI News: {'q': 'AI', 'category': 'health', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-24 15:45:20,587 - slackbot.collectors.api_collector - INFO - NewsAPI response for Health AI News: status=ok, totalResults=37, articles=8
2025-08-24 15:45:20,587 - slackbot.collectors.api_collector - INFO - Fetched 8 articles from Health AI News
2025-08-24 15:45:20,588 - slackbot.collectors.api_collector - INFO - Limited results to 20 items (balanced: 10 ArXiv, 10 NewsAPI)
2025-08-24 15:45:20,588 - slackbot.collectors.api_collector - INFO - Collected 20 total items from API News Collector
2025-08-24 15:45:20,588 - slackbot.services.aggregation_service - INFO - ‚úÖ Collected 20 articles from api
2025-08-24 15:45:20,588 - slackbot.services.aggregation_service - INFO - üìä api: collected 4 articles
2025-08-24 15:45:20,588 - slackbot.services.aggregation_service - INFO - ‚úÖ Balanced collection complete: 4 articles from 1 sources
2025-08-24 15:45:20,588 - __main__ - INFO - ‚úÖ Successfully collected 4 articles
2025-08-24 15:45:20,588 - __main__ - INFO -   1. Scaling Group Inference for Diverse and High-Quality Generat...
2025-08-24 15:45:20,588 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-24 15:45:20,589 - __main__ - INFO -      Category: Research Papers
2025-08-24 15:45:20,589 - __main__ - INFO -   2. Visual Autoregressive Modeling for Instruction-Guided Image ...
2025-08-24 15:45:20,589 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-24 15:45:20,589 - __main__ - INFO -      Category: Research Papers
2025-08-24 15:45:20,589 - __main__ - INFO -   3. SceneGen: Single-Image 3D Scene Generation in One Feedforwar...
2025-08-24 15:45:20,589 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-24 15:45:20,589 - __main__ - INFO -      Category: Research Papers
2025-08-24 15:45:20,589 - __main__ - INFO - 
üß† Step 3: Creating TLDR Summaries
2025-08-24 15:45:20,589 - __main__ - INFO - ----------------------------------------
2025-08-24 15:45:20,589 - __main__ - INFO - üß† Starting TLDR summarization...
2025-08-24 15:45:20,589 - slackbot.services.summarizer_service - INFO - üéØ Using summarization strategy: individual
2025-08-24 15:45:20,590 - slackbot.services.summarizer_service - INFO - üìù Batch summarizing 4 articles
2025-08-24 15:45:20,590 - slackbot.services.summarizer_service - INFO -   Processing 1/4: Scaling Group Inference for Diverse and High-Quali...
2025-08-24 15:45:20,590 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Scaling Group Inference for Diverse and High-Quali...
2025-08-24 15:45:20,601 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-9c6d4998-a005-44b4-809b-7357119c5711', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Scaling Group Inference for Diverse and High-Quality Generation\nContent: Generative models typically sample outputs independently, and recent\ninference-time guidance and scaling algorithms focus on improving the quality\nof individual samples. However, in real-world applications, users are often\npresented with a set of multiple images (e.g., 4-8) for each prompt, where\nindependent sampling tends to lead to redundant results, limiting user choices\nand hindering idea exploration. In this work, we introduce a scalable group\ninference method that improves both the diversity and quality of a group of\nsamples. We formulate group inference as a quadratic integer assignment\nproblem: candidate outputs are modeled as graph nodes, and a subset is selected\nto optimize sample quality (unary term) while maximizing group diversity\n(binary term). To substantially improve runtime efficiency, we progressively\nprune the candidate set using intermediate predictions, allowing our method to\nscale up to large candidate sets. Extensive experiments show that our method\nsignificantly improves group diversity and quality compared to independent\nsampling baselines and recent inference algorithms. Our framework generalizes\nacross a wide range of tasks, including text-to-image, image-to-image, image\nprompting, and video generation, enabling generative models to treat multiple\noutputs as cohesive groups rather than independent samples.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 15:45:20,611 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 15:45:20,612 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-08-24 15:45:20,635 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x77348c747750>
2025-08-24 15:45:20,635 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x77348ed29d00> server_hostname='api.openai.com' timeout=None
2025-08-24 15:45:20,657 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x77348c7ae090>
2025-08-24 15:45:20,657 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 15:45:20,657 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 15:45:20,657 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 15:45:20,657 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 15:45:20,658 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 15:45:22,924 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:15:22 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1878'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1964'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999269'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_95d6410c27794fd8ba0eed8393e14e68'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=EfHFKHvoF5mxxWOCIsQbxuupW6R.1.3Hs3isflAz_vg-1756030522-1.0.1.1-ow_G3MkpRk0elTRuR5f5HdL2szwAPnwZn9RU7XOJXgm3jPPsYIYkALysianV0yEhqUGpBu7NMBVvvOi90O9mJXbOq4v4BuCDXCl2J8Mx4IY; path=/; expires=Sun, 24-Aug-25 10:45:22 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=sWEOJ4ZSF9td0OqVv1mEYrwsdswLa6Cu6op57YdnsXo-1756030522938-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9742168269967f6a-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 15:45:22,924 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 15:45:22,925 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 15:45:22,925 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 15:45:22,925 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 15:45:22,926 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 15:45:22,926 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sun, 24 Aug 2025 10:15:22 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'keyvalue-rtv23o'), ('openai-processing-ms', '1878'), ('openai-project', 'proj_whQdFja0l3II6fu7PPtC7wv5'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1964'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '50000000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '49999269'), ('x-ratelimit-reset-requests', '6ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_95d6410c27794fd8ba0eed8393e14e68'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=EfHFKHvoF5mxxWOCIsQbxuupW6R.1.3Hs3isflAz_vg-1756030522-1.0.1.1-ow_G3MkpRk0elTRuR5f5HdL2szwAPnwZn9RU7XOJXgm3jPPsYIYkALysianV0yEhqUGpBu7NMBVvvOi90O9mJXbOq4v4BuCDXCl2J8Mx4IY; path=/; expires=Sun, 24-Aug-25 10:45:22 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=sWEOJ4ZSF9td0OqVv1mEYrwsdswLa6Cu6op57YdnsXo-1756030522938-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '9742168269967f6a-MAA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-08-24 15:45:22,926 - openai._base_client - DEBUG - request_id: req_95d6410c27794fd8ba0eed8393e14e68
2025-08-24 15:45:22,955 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 15:45:22,955 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 15:45:22,955 - slackbot.services.summarizer_service - INFO -   Processing 2/4: Visual Autoregressive Modeling for Instruction-Gui...
2025-08-24 15:45:22,955 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Visual Autoregressive Modeling for Instruction-Gui...
2025-08-24 15:45:22,958 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-92c984ce-6473-4ece-9317-eb5df080f474', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Visual Autoregressive Modeling for Instruction-Guided Image Editing\nContent: Recent advances in diffusion models have brought remarkable visual fidelity\nto instruction-guided image editing. However, their global denoising process\ninherently entangles the edited region with the entire image context, leading\nto unintended spurious modifications and compromised adherence to editing\ninstructions. In contrast, autoregressive models offer a distinct paradigm by\nformulating image synthesis as a sequential process over discrete visual\ntokens. Their causal and compositional mechanism naturally circumvents the\nadherence challenges of diffusion-based methods. In this paper, we present\nVAREdit, a visual autoregressive (VAR) framework that reframes image editing as\na next-scale prediction problem. Conditioned on source image features and text\ninstructions, VAREdit generates multi-scale target features to achieve precise\nedits. A core challenge in this paradigm is how to effectively condition the\nsource image tokens. We observe that finest-scale source features cannot\neffectively guide the prediction of coarser target features. To bridge this\ngap, we introduce a Scale-Aligned Reference (SAR) module, which injects\nscale-matched conditioning information into the first self-attention layer.\nVAREdit demonstrates significant advancements in both editing adherence and\nefficiency. On standard benchmarks, it outperforms leading diffusion-based\nmethods by 30\\%+ higher GPT-Balance score. Moreover, it completes a\n$512\\times512$ editing in 1.2 seconds, making it 2.2$\\times$ faster than the\nsimilarly sized UltraEdit. The models are available at\nhttps://github.com/HiDream-ai/VAREdit.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 15:45:22,959 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 15:45:22,960 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 15:45:22,961 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 15:45:22,961 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 15:45:22,961 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 15:45:22,962 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 15:45:25,400 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:15:25 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'2093'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2142'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999205'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_ab7b7a0b296c4d8eaae8e028ea1a57c5'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97421690df7b7f6a-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 15:45:25,400 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 15:45:25,400 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 15:45:25,402 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 15:45:25,403 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 15:45:25,403 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 15:45:25,403 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 24 Aug 2025 10:15:25 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '2093', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2142', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999205', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_ab7b7a0b296c4d8eaae8e028ea1a57c5', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '97421690df7b7f6a-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-24 15:45:25,403 - openai._base_client - DEBUG - request_id: req_ab7b7a0b296c4d8eaae8e028ea1a57c5
2025-08-24 15:45:25,416 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 15:45:25,416 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 15:45:25,416 - slackbot.services.summarizer_service - INFO -   Processing 3/4: SceneGen: Single-Image 3D Scene Generation in One ...
2025-08-24 15:45:25,416 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: SceneGen: Single-Image 3D Scene Generation in One ...
2025-08-24 15:45:25,418 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-f4bb7eb7-2926-4567-860c-b04701651190', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: SceneGen: Single-Image 3D Scene Generation in One Feedforward Pass\nContent: 3D content generation has recently attracted significant research interest\ndue to its applications in VR/AR and embodied AI. In this work, we address the\nchallenging task of synthesizing multiple 3D assets within a single scene\nimage. Concretely, our contributions are fourfold: (i) we present SceneGen, a\nnovel framework that takes a scene image and corresponding object masks as\ninput, simultaneously producing multiple 3D assets with geometry and texture.\nNotably, SceneGen operates with no need for optimization or asset retrieval;\n(ii) we introduce a novel feature aggregation module that integrates local and\nglobal scene information from visual and geometric encoders within the feature\nextraction module. Coupled with a position head, this enables the generation of\n3D assets and their relative spatial positions in a single feedforward pass;\n(iii) we demonstrate SceneGen\'s direct extensibility to multi-image input\nscenarios. Despite being trained solely on single-image inputs, our\narchitectural design enables improved generation performance with multi-image\ninputs; and (iv) extensive quantitative and qualitative evaluations confirm the\nefficiency and robust generation abilities of our approach. We believe this\nparadigm offers a novel solution for high-quality 3D content generation,\npotentially advancing its practical applications in downstream tasks. The code\nand model will be publicly available at: https://mengmouxu.github.io/SceneGen.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 15:45:25,420 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 15:45:25,420 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 15:45:25,421 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 15:45:25,421 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 15:45:25,421 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 15:45:25,421 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 15:45:27,623 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:15:27 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1883'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1906'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999242'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_e8fe81470fee4e90b5632bff3baffa09'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'974216a03f3a7f6a-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 15:45:27,624 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 15:45:27,624 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 15:45:27,624 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 15:45:27,624 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 15:45:27,625 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 15:45:27,625 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 24 Aug 2025 10:15:27 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1883', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1906', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999242', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_e8fe81470fee4e90b5632bff3baffa09', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '974216a03f3a7f6a-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-24 15:45:27,625 - openai._base_client - DEBUG - request_id: req_e8fe81470fee4e90b5632bff3baffa09
2025-08-24 15:45:27,639 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 15:45:27,639 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 15:45:27,639 - slackbot.services.summarizer_service - INFO -   Processing 4/4: ATLAS: Decoupling Skeletal and Shape Parameters fo...
2025-08-24 15:45:27,639 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: ATLAS: Decoupling Skeletal and Shape Parameters fo...
2025-08-24 15:45:27,642 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-e8189a48-8b33-4a8e-be83-5a1c2fc3d53f', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: ATLAS: Decoupling Skeletal and Shape Parameters for Expressive Parametric Human Modeling\nContent: Parametric body models offer expressive 3D representation of humans across a\nwide range of poses, shapes, and facial expressions, typically derived by\nlearning a basis over registered 3D meshes. However, existing human mesh\nmodeling approaches struggle to capture detailed variations across diverse body\nposes and shapes, largely due to limited training data diversity and\nrestrictive modeling assumptions. Moreover, the common paradigm first optimizes\nthe external body surface using a linear basis, then regresses internal\nskeletal joints from surface vertices. This approach introduces problematic\ndependencies between internal skeleton and outer soft tissue, limiting direct\ncontrol over body height and bone lengths. To address these issues, we present\nATLAS, a high-fidelity body model learned from 600k high-resolution scans\ncaptured using 240 synchronized cameras. Unlike previous methods, we explicitly\ndecouple the shape and skeleton bases by grounding our mesh representation in\nthe human skeleton. This decoupling enables enhanced shape expressivity,\nfine-grained customization of body attributes, and keypoint fitting independent\nof external soft-tissue characteristics. ATLAS outperforms existing methods by\nfitting unseen subjects in diverse poses more accurately, and quantitative\nevaluations show that our non-linear pose correctives more effectively capture\ncomplex poses compared to linear models.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 15:45:27,643 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 15:45:27,643 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 15:45:27,644 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 15:45:27,644 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 15:45:27,644 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 15:45:27,644 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 15:45:30,007 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:15:29 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1714'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1839'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999248'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_567410132c5c42eaa1f81f6720204eed'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'974216ae1bed7f6a-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 15:45:30,008 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 15:45:30,008 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 15:45:30,008 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 15:45:30,008 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 15:45:30,008 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 15:45:30,009 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 24 Aug 2025 10:15:29 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1714', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1839', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999248', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_567410132c5c42eaa1f81f6720204eed', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '974216ae1bed7f6a-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-24 15:45:30,009 - openai._base_client - DEBUG - request_id: req_567410132c5c42eaa1f81f6720204eed
2025-08-24 15:45:30,018 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 15:45:30,018 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 15:45:30,018 - slackbot.services.summarizer_service - INFO - ‚úÖ Batch summarization complete: 4/4 successful
2025-08-24 15:45:30,018 - __main__ - INFO - ‚úÖ Successfully created 4 TLDR summaries
2025-08-24 15:45:30,018 - __main__ - INFO - 
üí¨ Step 4: Creating Slack Message
2025-08-24 15:45:30,018 - __main__ - INFO - ----------------------------------------
2025-08-24 15:45:30,019 - __main__ - INFO - üí¨ Creating Slack message...
2025-08-24 15:45:30,019 - __main__ - INFO - ‚úÖ Slack message created with 11 blocks
2025-08-24 15:45:30,019 - __main__ - INFO - 
üì§ Step 5: Publishing to Slack
2025-08-24 15:45:30,019 - __main__ - INFO - ----------------------------------------
2025-08-24 15:45:30,019 - __main__ - INFO - üì§ Publishing to Slack channel C09AUAZCQR1...
2025-08-24 15:45:30,019 - slackbot.services.publisher_service - INFO - üì§ Publishing message to slack
2025-08-24 15:45:30,020 - slack_bolt.App - DEBUG - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': '#news-finder', 'text': 'üöÄ AI/ML News TLDR - 4 articles summarized', 'attachments': [], 'blocks': [{'type': 'header', 'text': {'type': 'plain_text', 'text': 'üöÄ AI/ML News TLDR - Daily Digest'}}, {'type': 'section', 'text': {'type': 'mrkdwn', 'text': "*Today's AI/ML News Summary*\nCollected 4 articles and created TLDR summaries."}}, {'type': 'divider'}, {'type': 'section', 'text': {'type': 'mrkdwn', 'text': '*1. Scaling Group Inference for Diverse and High-Quality Generation*\nIntroduces a method for group inference to enhance diversity and quality of generative model samples. Uses a quadratic integer assignment problem to select outputs optimizing quality and maximizing diversity. Outperforms independent sampling and recent algorithms in various generative tasks.\n<http://arxiv.org/abs/2508.15773v1|Read more>'}}, {'type': 'divider'}, {'type': 'section', 'text': {'type': 'mrkdwn', 'text': '*2. Visual Autoregressive Modeling for Instruction-Guided Image Editing*\nVAREdit introduces a visual autoregressive framework for precise image editing guided by instructions, outperforming diffusion-based methods in adherence and speed. It utilizes a Scale-Aligned Reference module for effective conditioning.\n<http://arxiv.org/abs/2508.15772v1|Read more>'}}, {'type': 'divider'}, {'type': 'section', 'text': {'type': 'mrkdwn', 'text': '*3. SceneGen: Single-Image 3D Scene Generation in One Feedforward Pass*\nSceneGen is a framework for generating 3D scenes from a single image input, producing multiple 3D assets with geometry and texture in one pass. It requires no optimization or asset retrieval and can handle multi-image inputs efficiently.\n<http://arxiv.org/abs/2508.15769v1|Read more>'}}, {'type': 'divider'}, {'type': 'section', 'text': {'type': 'mrkdwn', 'text': '*4. ATLAS: Decoupling Skeletal and Shape Parameters for Expressive Parametric Human Modeling*\nATLAS introduces a new approach for parametric human modeling by decoupling skeletal and shape parameters, improving expressivity and customization. It outperforms existing methods in accurately fitting diverse poses.\n<http://arxiv.org/abs/2508.15767v1|Read more>'}}, {'type': 'context', 'elements': [{'type': 'mrkdwn', 'text': 'üìä *4* articles summarized ‚Ä¢ Generated at 15:45:30'}]}]}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.23.0 Python/3.11.13 slackclient/3.36.0 Linux/6.8.0-65-generic'}
2025-08-24 15:45:30,734 - slack_bolt.App - DEBUG - Received the following response - status: 200, headers: {'date': 'Sun, 24 Aug 2025 10:15:30 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'd666f9eca83d64a7ee0af39b7ec8e9bd', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'chat:write,files:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKrmQiYUh0Sh_Fs2MWFXlwAAEBI', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '3215', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-zvxsiscw,envoy-edge-bom-pjpomeej', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '408', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-kyig', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"C09AUAZCQR1","ts":"1756030530.602349","message":{"user":"U09BG266092","type":"message","ts":"1756030530.602349","bot_id":"B09BG26606Q","app_id":"A09BBRCFEV8","text":":rocket: AI\/ML News TLDR - 4 articles summarized","team":"T4LJBDMDY","bot_profile":{"id":"B09BG26606Q","app_id":"A09BBRCFEV8","user_id":"U09BG266092","name":"Briefly","icons":{"image_36":"https:\/\/avatars.slack-edge.com\/2025-08-21\/9399655186801_62917fdb062b1fa75b31_36.png","image_48":"https:\/\/avatars.slack-edge.com\/2025-08-21\/9399655186801_62917fdb062b1fa75b31_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2025-08-21\/9399655186801_62917fdb062b1fa75b31_72.png"},"deleted":false,"updated":1755759762,"team_id":"T4LJBDMDY"},"blocks":[{"type":"header","block_id":"akMi6","text":{"type":"plain_text","text":":rocket: AI\/ML News TLDR - Daily Digest","emoji":true}},{"type":"section","block_id":"mbAs5","text":{"type":"mrkdwn","text":"*Today's AI\/ML News Summary*\nCollected 4 articles and created TLDR summaries.","verbatim":false}},{"type":"divider","block_id":"\/4v0p"},{"type":"section","block_id":"LMuj\/","text":{"type":"mrkdwn","text":"*1. Scaling Group Inference for Diverse and High-Quality Generation*\nIntroduces a method for group inference to enhance diversity and quality of generative model samples. Uses a quadratic integer assignment problem to select outputs optimizing quality and maximizing diversity. Outperforms independent sampling and recent algorithms in various generative tasks.\n<http:\/\/arxiv.org\/abs\/2508.15773v1|Read more>","verbatim":false}},{"type":"divider","block_id":"Za\/iS"},{"type":"section","block_id":"PbB5U","text":{"type":"mrkdwn","text":"*2. Visual Autoregressive Modeling for Instruction-Guided Image Editing*\nVAREdit introduces a visual autoregressive framework for precise image editing guided by instructions, outperforming diffusion-based methods in adherence and speed. It utilizes a Scale-Aligned Reference module for effective conditioning.\n<http:\/\/arxiv.org\/abs\/2508.15772v1|Read more>","verbatim":false}},{"type":"divider","block_id":"mLY0d"},{"type":"section","block_id":"1mxJt","text":{"type":"mrkdwn","text":"*3. SceneGen: Single-Image 3D Scene Generation in One Feedforward Pass*\nSceneGen is a framework for generating 3D scenes from a single image input, producing multiple 3D assets with geometry and texture in one pass. It requires no optimization or asset retrieval and can handle multi-image inputs efficiently.\n<http:\/\/arxiv.org\/abs\/2508.15769v1|Read more>","verbatim":false}},{"type":"divider","block_id":"\/EVw\/"},{"type":"section","block_id":"I51Ej","text":{"type":"mrkdwn","text":"*4. ATLAS: Decoupling Skeletal and Shape Parameters for Expressive Parametric Human Modeling*\nATLAS introduces a new approach for parametric human modeling by decoupling skeletal and shape parameters, improving expressivity and customization. It outperforms existing methods in accurately fitting diverse poses.\n<http:\/\/arxiv.org\/abs\/2508.15767v1|Read more>","verbatim":false}},{"type":"context","block_id":"4oB7a","elements":[{"type":"mrkdwn","text":":bar_chart: *4* articles summarized \u2022 Generated at 15:45:30","verbatim":false}]}]}}
2025-08-24 15:45:30,735 - slackbot.slack.publisher - INFO - TLDR message published to #news-finder
2025-08-24 15:45:30,735 - slackbot.services.publisher_service - INFO - ‚úÖ Message published successfully to slack
2025-08-24 15:45:30,735 - __main__ - INFO - üéâ Successfully published to Slack!
2025-08-24 15:45:30,735 - __main__ - INFO - üì∫ Channel: C09AUAZCQR1
2025-08-24 15:45:30,735 - __main__ - INFO - üÜî Message ID: None
2025-08-24 15:45:30,735 - __main__ - INFO - 
üéâ Briefly Bot completed successfully!
2025-08-24 15:45:30,735 - __main__ - INFO - üìä Summary:
2025-08-24 15:45:30,735 - __main__ - INFO -   ‚Ä¢ Articles collected: 4
2025-08-24 15:45:30,736 - __main__ - INFO -   ‚Ä¢ TLDR summaries created: 4
2025-08-24 15:45:30,736 - __main__ - INFO -   ‚Ä¢ Published to Slack: C09AUAZCQR1
2025-08-24 15:45:30,736 - __main__ - INFO - ‚úÖ Briefly Bot completed successfully
2025-08-24 15:45:30,928 - httpcore.connection - DEBUG - close.started
2025-08-24 15:45:30,929 - httpcore.connection - DEBUG - close.complete
2025-08-24 16:17:26,693 - __main__ - INFO - Briefly Bot logging initialized
2025-08-24 16:17:26,693 - __main__ - INFO - üöÄ Briefly Bot - AI/ML News Aggregator
2025-08-24 16:17:26,693 - __main__ - INFO - ==================================================
2025-08-24 16:17:26,694 - __main__ - INFO - üìÖ Started at: 2025-08-24 16:17:26
2025-08-24 16:17:26,694 - __main__ - INFO - üîß Dry run: Yes
2025-08-24 16:17:26,694 - __main__ - INFO - üìä Max articles: 6
2025-08-24 16:17:26,694 - __main__ - INFO - üß† LLM Provider: openai
2025-08-24 16:17:26,694 - __main__ - INFO - üì∫ Target channel: C09AUAZCQR1
2025-08-24 16:17:26,694 - __main__ - INFO - ==================================================
2025-08-24 16:17:26,694 - __main__ - INFO - üöÄ Starting Briefly Bot...
2025-08-24 16:17:26,694 - __main__ - INFO - ============================================================
2025-08-24 16:17:26,694 - __main__ - INFO - üîß Initializing services...
2025-08-24 16:17:26,694 - slackbot.services.aggregation_service - INFO - Initializing AggregationService
2025-08-24 16:17:26,695 - slackbot.collectors.base_collector - INFO - Initialized collector: ArXiv Collector
2025-08-24 16:17:26,695 - slackbot.collectors.arxiv_collector - INFO - Loaded 4 ArXiv sources
2025-08-24 16:17:26,695 - slackbot.collectors.arxiv_collector - INFO - ArXiv client available
2025-08-24 16:17:26,695 - slackbot.services.aggregation_service - INFO - ‚úÖ ArXiv collector initialized successfully
2025-08-24 16:17:26,695 - slackbot.collectors.base_collector - INFO - Initialized collector: NewsAPI Collector
2025-08-24 16:17:26,695 - slackbot.collectors.newsapi_org_collector - INFO - Loaded 4 NewsAPI sources
2025-08-24 16:17:26,695 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI client initialized successfully
2025-08-24 16:17:26,695 - slackbot.services.aggregation_service - INFO - ‚úÖ NewsAPI collector initialized successfully
2025-08-24 16:17:26,695 - slackbot.collectors.base_collector - INFO - Initialized CollectorManager
2025-08-24 16:17:26,695 - slackbot.services.aggregation_service - INFO - üìä AggregationService initialized with 2 collectors
2025-08-24 16:17:26,695 - slackbot.services.summarizer_service - INFO - Initializing SummarizerService with provider: openai
2025-08-24 16:17:27,184 - slackbot.summarizer.tldr_summarizer - INFO - Initialized OpenAI TLDR summarizer with model: gpt-3.5-turbo
2025-08-24 16:17:27,201 - slackbot.summarizer.tldr_summarizer - INFO - Initialized Gemini fallback with model: gemini-1.5-flash
2025-08-24 16:17:27,201 - slackbot.services.summarizer_service - INFO - ‚úÖ Summarizer initialized successfully with openai
2025-08-24 16:17:27,202 - slackbot.services.publisher_service - INFO - Initializing PublisherService with default platform: slack
2025-08-24 16:17:27,317 - slack_bolt.App - DEBUG - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.23.0 Python/3.11.13 slackclient/3.36.0 Linux/6.8.0-65-generic'}
2025-08-24 16:17:27,847 - slack_bolt.App - DEBUG - Received the following response - status: 200, headers: {'date': 'Sun, 24 Aug 2025 10:47:27 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'ebde559f6f75552861e79176c461bc18', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'chat:write,files:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aKrtv4rRx7FDR14NXsIWpQAAECo', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '208', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-bslyllah,envoy-edge-bom-ozikodwl', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '239', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-canary-main-iad-anrx', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https:\/\/keyvaluesystems.slack.com\/","team":"KeyValue Software Systems","user":"briefly","team_id":"T4LJBDMDY","user_id":"U09BG266092","bot_id":"B09BG26606Q","is_enterprise_install":false}
2025-08-24 16:17:27,847 - slackbot.slack.publisher - INFO - Slack publisher initialized successfully
2025-08-24 16:17:27,847 - slackbot.services.publisher_service - INFO - ‚úÖ Slack publisher initialized successfully
2025-08-24 16:17:27,847 - slackbot.services.publisher_service - INFO - üì§ PublisherService initialized with 1 publishers
2025-08-24 16:17:27,847 - __main__ - INFO - ‚úÖ All services initialized successfully
2025-08-24 16:17:27,847 - __main__ - INFO - 
üì∞ Step 2: Collecting News
2025-08-24 16:17:27,847 - __main__ - INFO - ----------------------------------------
2025-08-24 16:17:27,848 - __main__ - INFO - üîç Starting news collection...
2025-08-24 16:17:27,848 - slackbot.services.aggregation_service - INFO - üéØ Collecting 6 articles with balanced sources: True
2025-08-24 16:17:27,848 - slackbot.services.aggregation_service - INFO - üîç Collecting from arxiv
2025-08-24 16:17:30,086 - slackbot.collectors.arxiv_collector - INFO - Fetched 20 papers from ArXiv AI Papers
2025-08-24 16:17:30,747 - slackbot.collectors.arxiv_collector - INFO - Fetched 5 papers from ArXiv Computer Vision
2025-08-24 16:17:31,310 - slackbot.collectors.arxiv_collector - INFO - Fetched 3 papers from ArXiv NLP Papers
2025-08-24 16:17:31,612 - slackbot.collectors.arxiv_collector - INFO - Fetched 1 papers from ArXiv Robotics
2025-08-24 16:17:31,612 - slackbot.collectors.arxiv_collector - INFO - Collected 29 total papers from ArXiv Collector
2025-08-24 16:17:31,612 - slackbot.services.aggregation_service - INFO - ‚úÖ Collected 29 articles from arxiv
2025-08-24 16:17:31,613 - slackbot.services.aggregation_service - INFO - üìä arxiv: collected 3 articles
2025-08-24 16:17:31,613 - slackbot.services.aggregation_service - INFO - üîç Collecting from newsapi
2025-08-24 16:17:31,613 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI params for Tech News AI: {'q': 'artificial intelligence OR AI', 'category': 'technology', 'language': 'en', 'country': 'us', 'page_size': 15}
2025-08-24 16:17:32,062 - slackbot.collectors.newsapi_org_collector - INFO - No results with category for Tech News AI, trying broader search...
2025-08-24 16:17:34,401 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI response for Tech News AI: status=ok, totalResults=17234, articles=15
2025-08-24 16:17:34,401 - slackbot.collectors.newsapi_org_collector - INFO - Fetched 15 articles from Tech News AI
2025-08-24 16:17:34,401 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI params for Business AI News: {'q': 'AI', 'category': 'business', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-24 16:17:34,980 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI response for Business AI News: status=ok, totalResults=14, articles=9
2025-08-24 16:17:34,980 - slackbot.collectors.newsapi_org_collector - INFO - Fetched 9 articles from Business AI News
2025-08-24 16:17:34,981 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI params for Science AI News: {'q': 'AI', 'category': 'science', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-24 16:17:35,801 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI response for Science AI News: status=ok, totalResults=14, articles=10
2025-08-24 16:17:35,801 - slackbot.collectors.newsapi_org_collector - INFO - Fetched 10 articles from Science AI News
2025-08-24 16:17:35,802 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI params for Health AI News: {'q': 'AI', 'category': 'health', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-24 16:17:36,254 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI response for Health AI News: status=ok, totalResults=37, articles=8
2025-08-24 16:17:36,255 - slackbot.collectors.newsapi_org_collector - INFO - Fetched 8 articles from Health AI News
2025-08-24 16:17:36,255 - slackbot.collectors.newsapi_org_collector - INFO - Collected 42 total articles from NewsAPI Collector
2025-08-24 16:17:36,255 - slackbot.services.aggregation_service - INFO - ‚úÖ Collected 42 articles from newsapi
2025-08-24 16:17:36,255 - slackbot.services.aggregation_service - INFO - üìä newsapi: collected 3 articles
2025-08-24 16:17:36,255 - slackbot.services.aggregation_service - INFO - ‚úÖ Balanced collection complete: 6 articles from 2 sources
2025-08-24 16:17:36,255 - __main__ - INFO - ‚úÖ Successfully collected 6 articles
2025-08-24 16:17:36,255 - __main__ - INFO -   1. Scaling Group Inference for Diverse and High-Quality Generat...
2025-08-24 16:17:36,255 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-24 16:17:36,255 - __main__ - INFO -      Category: Research Papers
2025-08-24 16:17:36,255 - __main__ - INFO -   2. Visual Autoregressive Modeling for Instruction-Guided Image ...
2025-08-24 16:17:36,256 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-24 16:17:36,256 - __main__ - INFO -      Category: Research Papers
2025-08-24 16:17:36,256 - __main__ - INFO -   3. SceneGen: Single-Image 3D Scene Generation in One Feedforwar...
2025-08-24 16:17:36,256 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-24 16:17:36,256 - __main__ - INFO -      Category: Research Papers
2025-08-24 16:17:36,256 - __main__ - INFO - 
üß† Step 3: Creating TLDR Summaries
2025-08-24 16:17:36,256 - __main__ - INFO - ----------------------------------------
2025-08-24 16:17:36,256 - __main__ - INFO - üß† Starting TLDR summarization...
2025-08-24 16:17:36,256 - slackbot.services.summarizer_service - INFO - üéØ Using summarization strategy: individual
2025-08-24 16:17:36,256 - slackbot.services.summarizer_service - INFO - üìù Batch summarizing 6 articles
2025-08-24 16:17:36,256 - slackbot.services.summarizer_service - INFO -   Processing 1/6: Scaling Group Inference for Diverse and High-Quali...
2025-08-24 16:17:36,257 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Scaling Group Inference for Diverse and High-Quali...
2025-08-24 16:17:36,269 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ea44f15f-eeb3-4494-ad16-3069ae66aaae', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Scaling Group Inference for Diverse and High-Quality Generation\nContent: Generative models typically sample outputs independently, and recent\ninference-time guidance and scaling algorithms focus on improving the quality\nof individual samples. However, in real-world applications, users are often\npresented with a set of multiple images (e.g., 4-8) for each prompt, where\nindependent sampling tends to lead to redundant results, limiting user choices\nand hindering idea exploration. In this work, we introduce a scalable group\ninference method that improves both the diversity and quality of a group of\nsamples. We formulate group inference as a quadratic integer assignment\nproblem: candidate outputs are modeled as graph nodes, and a subset is selected\nto optimize sample quality (unary term) while maximizing group diversity\n(binary term). To substantially improve runtime efficiency, we progressively\nprune the candidate set using intermediate predictions, allowing our method to\nscale up to large candidate sets. Extensive experiments show that our method\nsignificantly improves group diversity and quality compared to independent\nsampling baselines and recent inference algorithms. Our framework generalizes\nacross a wide range of tasks, including text-to-image, image-to-image, image\nprompting, and video generation, enabling generative models to treat multiple\noutputs as cohesive groups rather than independent samples.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 16:17:36,280 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 16:17:36,281 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-08-24 16:17:36,446 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x765a004a31d0>
2025-08-24 16:17:36,446 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x765a01225c70> server_hostname='api.openai.com' timeout=None
2025-08-24 16:17:36,624 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x765a004a1dd0>
2025-08-24 16:17:36,625 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 16:17:36,625 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 16:17:36,625 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 16:17:36,626 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 16:17:36,626 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 16:17:38,691 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:47:38 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1705'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1763'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999269'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_a78d4c96e0d4413eb64ed8d308df6d60'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=YkYT.31bUyzUMQN6uF6x5ytrD7J1MWb_fgIsnp3C_74-1756032458-1.0.1.1-kohKs1TirJtL5Qt7ZpekXTIfbW6DPm73iLYulRm3SbIoVteNHSNXsNncEFWwFt_8wvLrcOtvRcT9KftjDvrFZsgb3KpON_tAZIedOjPaa10; path=/; expires=Sun, 24-Aug-25 11:17:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=Y1HGEzM0lmayJuQG0bJl84rF9iSNHzAllVBkAhhQ2nA-1756032458660-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'974245c5dccc8826-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 16:17:38,692 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 16:17:38,692 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 16:17:38,692 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 16:17:38,693 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 16:17:38,693 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 16:17:38,693 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Sun, 24 Aug 2025 10:47:38 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'keyvalue-rtv23o'), ('openai-processing-ms', '1705'), ('openai-project', 'proj_whQdFja0l3II6fu7PPtC7wv5'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1763'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '50000000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '49999269'), ('x-ratelimit-reset-requests', '6ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_a78d4c96e0d4413eb64ed8d308df6d60'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=YkYT.31bUyzUMQN6uF6x5ytrD7J1MWb_fgIsnp3C_74-1756032458-1.0.1.1-kohKs1TirJtL5Qt7ZpekXTIfbW6DPm73iLYulRm3SbIoVteNHSNXsNncEFWwFt_8wvLrcOtvRcT9KftjDvrFZsgb3KpON_tAZIedOjPaa10; path=/; expires=Sun, 24-Aug-25 11:17:38 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=Y1HGEzM0lmayJuQG0bJl84rF9iSNHzAllVBkAhhQ2nA-1756032458660-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '974245c5dccc8826-MAA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-08-24 16:17:38,693 - openai._base_client - DEBUG - request_id: req_a78d4c96e0d4413eb64ed8d308df6d60
2025-08-24 16:17:38,713 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 16:17:38,714 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 16:17:38,714 - slackbot.services.summarizer_service - INFO -   Processing 2/6: Visual Autoregressive Modeling for Instruction-Gui...
2025-08-24 16:17:38,714 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Visual Autoregressive Modeling for Instruction-Gui...
2025-08-24 16:17:38,717 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-b74976de-8959-4e83-acee-ad7b16512d19', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Visual Autoregressive Modeling for Instruction-Guided Image Editing\nContent: Recent advances in diffusion models have brought remarkable visual fidelity\nto instruction-guided image editing. However, their global denoising process\ninherently entangles the edited region with the entire image context, leading\nto unintended spurious modifications and compromised adherence to editing\ninstructions. In contrast, autoregressive models offer a distinct paradigm by\nformulating image synthesis as a sequential process over discrete visual\ntokens. Their causal and compositional mechanism naturally circumvents the\nadherence challenges of diffusion-based methods. In this paper, we present\nVAREdit, a visual autoregressive (VAR) framework that reframes image editing as\na next-scale prediction problem. Conditioned on source image features and text\ninstructions, VAREdit generates multi-scale target features to achieve precise\nedits. A core challenge in this paradigm is how to effectively condition the\nsource image tokens. We observe that finest-scale source features cannot\neffectively guide the prediction of coarser target features. To bridge this\ngap, we introduce a Scale-Aligned Reference (SAR) module, which injects\nscale-matched conditioning information into the first self-attention layer.\nVAREdit demonstrates significant advancements in both editing adherence and\nefficiency. On standard benchmarks, it outperforms leading diffusion-based\nmethods by 30\\%+ higher GPT-Balance score. Moreover, it completes a\n$512\\times512$ editing in 1.2 seconds, making it 2.2$\\times$ faster than the\nsimilarly sized UltraEdit. The models are available at\nhttps://github.com/HiDream-ai/VAREdit.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 16:17:38,718 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 16:17:38,718 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 16:17:38,719 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 16:17:38,719 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 16:17:38,719 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 16:17:38,719 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 16:17:40,542 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:47:40 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1390'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1460'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999204'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_9537da4542ec4ffcad4f6448839a4404'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'974245d2fdfb8826-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 16:17:40,543 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 16:17:40,543 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 16:17:40,543 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 16:17:40,543 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 16:17:40,543 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 16:17:40,543 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 24 Aug 2025 10:47:40 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1390', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1460', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999204', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_9537da4542ec4ffcad4f6448839a4404', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '974245d2fdfb8826-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-24 16:17:40,544 - openai._base_client - DEBUG - request_id: req_9537da4542ec4ffcad4f6448839a4404
2025-08-24 16:17:40,553 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 16:17:40,553 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 16:17:40,553 - slackbot.services.summarizer_service - INFO -   Processing 3/6: SceneGen: Single-Image 3D Scene Generation in One ...
2025-08-24 16:17:40,553 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: SceneGen: Single-Image 3D Scene Generation in One ...
2025-08-24 16:17:40,555 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-05245381-7b4e-410d-8777-39875b9e14e5', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: SceneGen: Single-Image 3D Scene Generation in One Feedforward Pass\nContent: 3D content generation has recently attracted significant research interest\ndue to its applications in VR/AR and embodied AI. In this work, we address the\nchallenging task of synthesizing multiple 3D assets within a single scene\nimage. Concretely, our contributions are fourfold: (i) we present SceneGen, a\nnovel framework that takes a scene image and corresponding object masks as\ninput, simultaneously producing multiple 3D assets with geometry and texture.\nNotably, SceneGen operates with no need for optimization or asset retrieval;\n(ii) we introduce a novel feature aggregation module that integrates local and\nglobal scene information from visual and geometric encoders within the feature\nextraction module. Coupled with a position head, this enables the generation of\n3D assets and their relative spatial positions in a single feedforward pass;\n(iii) we demonstrate SceneGen\'s direct extensibility to multi-image input\nscenarios. Despite being trained solely on single-image inputs, our\narchitectural design enables improved generation performance with multi-image\ninputs; and (iv) extensive quantitative and qualitative evaluations confirm the\nefficiency and robust generation abilities of our approach. We believe this\nparadigm offers a novel solution for high-quality 3D content generation,\npotentially advancing its practical applications in downstream tasks. The code\nand model will be publicly available at: https://mengmouxu.github.io/SceneGen.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 16:17:40,557 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 16:17:40,557 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 16:17:40,558 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 16:17:40,558 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 16:17:40,558 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 16:17:40,559 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 16:17:42,888 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:47:42 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1923'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2026'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999242'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_64571e1be75348219f43bc9c8151c079'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'974245de69298826-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 16:17:42,889 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 16:17:42,889 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 16:17:42,889 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 16:17:42,889 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 16:17:42,889 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 16:17:42,890 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 24 Aug 2025 10:47:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1923', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2026', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999242', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_64571e1be75348219f43bc9c8151c079', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '974245de69298826-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-24 16:17:42,890 - openai._base_client - DEBUG - request_id: req_64571e1be75348219f43bc9c8151c079
2025-08-24 16:17:42,910 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 16:17:42,910 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 16:17:42,911 - slackbot.services.summarizer_service - INFO -   Processing 4/6: Why utility bills are rapidly rising in some state...
2025-08-24 16:17:42,911 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Why utility bills are rapidly rising in some state...
2025-08-24 16:17:42,914 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-63d02f5f-43e4-4a13-8d88-5a5ae1ac4213', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Why utility bills are rapidly rising in some states\nContent: If you noticed your utility bill has gone up this summer, you\'re not alone. On average, electricity costs are 5.5% higher today than they were a year ago, according to the latest federal data, and na‚Ä¶ [+9178 chars]\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 16:17:42,915 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 16:17:42,915 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 16:17:42,916 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 16:17:42,916 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 16:17:42,916 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 16:17:42,916 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 16:17:44,582 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:47:44 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1287'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1364'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999557'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_0feb5b9ca7c44528b7856fd3d77cf3a3'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'974245ed2e8d8826-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 16:17:44,583 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 16:17:44,583 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 16:17:44,587 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 16:17:44,588 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 16:17:44,588 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 16:17:44,588 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 24 Aug 2025 10:47:44 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1287', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1364', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999557', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_0feb5b9ca7c44528b7856fd3d77cf3a3', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '974245ed2e8d8826-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-24 16:17:44,589 - openai._base_client - DEBUG - request_id: req_0feb5b9ca7c44528b7856fd3d77cf3a3
2025-08-24 16:17:44,601 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 16:17:44,601 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 16:17:44,602 - slackbot.services.summarizer_service - INFO -   Processing 5/6: Scientists create pollen-replacing superfood for h...
2025-08-24 16:17:44,602 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Scientists create pollen-replacing superfood for h...
2025-08-24 16:17:44,606 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-eb7dc000-c340-48f5-b0e7-2da342009058', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Scientists create pollen-replacing superfood for honey bees, hoping to prevent extinction - Earth.com\nContent: The Fine Print: The following comments are owned by whoever posted them. We are not responsible for them in any way.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 16:17:44,608 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 16:17:44,609 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 16:17:44,609 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 16:17:44,610 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 16:17:44,610 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 16:17:44,610 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 16:17:46,073 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:47:45 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1007'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1037'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999569'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_961482eb5a1e47a595c1679d7087a70b'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'974245f7c97d8826-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 16:17:46,073 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 16:17:46,074 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 16:17:46,074 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 16:17:46,074 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 16:17:46,075 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 16:17:46,075 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 24 Aug 2025 10:47:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1007', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1037', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999569', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_961482eb5a1e47a595c1679d7087a70b', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '974245f7c97d8826-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-24 16:17:46,075 - openai._base_client - DEBUG - request_id: req_961482eb5a1e47a595c1679d7087a70b
2025-08-24 16:17:46,088 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 16:17:46,088 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 16:17:46,088 - slackbot.services.summarizer_service - INFO -   Processing 6/6: Did Trump save Intel? Not really...
2025-08-24 16:17:46,088 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Did Trump save Intel? Not really...
2025-08-24 16:17:46,093 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-5eeb3016-c25c-4a4a-bdfd-ed21a8c985b0', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Did Trump save Intel? Not really\nContent: U.S. President Donald Trump is injecting nearly $9 billion into Intel in exchange for a 9.9% equity stake. But the money - which the struggling chipmaker was slated to receive anyway under a federal ‚Ä¶ [+4969 chars]\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-24 16:17:46,094 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-24 16:17:46,095 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-24 16:17:46,095 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-24 16:17:46,095 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-24 16:17:46,096 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-24 16:17:46,096 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-24 16:17:47,622 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Sun, 24 Aug 2025 10:47:47 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1172'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1221'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999562'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_662b4665077d450fb3ee56f8016d3737'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'974246010a108826-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-24 16:17:47,623 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-24 16:17:47,623 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-24 16:17:47,626 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-24 16:17:47,626 - httpcore.http11 - DEBUG - response_closed.started
2025-08-24 16:17:47,627 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-24 16:17:47,627 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Sun, 24 Aug 2025 10:47:47 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1172', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1221', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999562', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_662b4665077d450fb3ee56f8016d3737', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '974246010a108826-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-24 16:17:47,627 - openai._base_client - DEBUG - request_id: req_662b4665077d450fb3ee56f8016d3737
2025-08-24 16:17:47,636 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-24 16:17:47,636 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-24 16:17:47,637 - slackbot.services.summarizer_service - INFO - ‚úÖ Batch summarization complete: 6/6 successful
2025-08-24 16:17:47,637 - __main__ - INFO - ‚úÖ Successfully created 6 TLDR summaries
2025-08-24 16:17:47,637 - __main__ - INFO - 
üí¨ Step 4: Creating Slack Message
2025-08-24 16:17:47,637 - __main__ - INFO - ----------------------------------------
2025-08-24 16:17:47,637 - __main__ - INFO - üí¨ Creating Slack message...
2025-08-24 16:17:47,637 - __main__ - INFO - ‚úÖ Slack message created with 15 blocks
2025-08-24 16:17:47,637 - __main__ - INFO - 
üì§ Step 5: Publishing to Slack
2025-08-24 16:17:47,637 - __main__ - INFO - ----------------------------------------
2025-08-24 16:17:47,637 - __main__ - INFO - üîç DRY RUN: Would publish to Slack
2025-08-24 16:17:47,637 - __main__ - INFO -    Channel: C09AUAZCQR1
2025-08-24 16:17:47,637 - __main__ - INFO -    Message blocks: 15
2025-08-24 16:17:47,637 - __main__ - INFO - 
üéâ Briefly Bot completed successfully!
2025-08-24 16:17:47,638 - __main__ - INFO - üìä Summary:
2025-08-24 16:17:47,638 - __main__ - INFO -   ‚Ä¢ Articles collected: 6
2025-08-24 16:17:47,638 - __main__ - INFO -   ‚Ä¢ TLDR summaries created: 6
2025-08-24 16:17:47,638 - __main__ - INFO -   ‚Ä¢ Published to Slack: DRY RUN
2025-08-24 16:17:47,638 - __main__ - INFO - ‚úÖ Briefly Bot completed successfully
2025-08-24 16:17:47,820 - httpcore.connection - DEBUG - close.started
2025-08-24 16:17:47,821 - httpcore.connection - DEBUG - close.complete
