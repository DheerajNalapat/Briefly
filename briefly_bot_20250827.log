2025-08-27 08:43:56,593 - __main__ - INFO - Briefly Bot logging initialized
2025-08-27 08:43:56,593 - __main__ - INFO - üöÄ Briefly Bot - AI/ML News Aggregator
2025-08-27 08:43:56,593 - __main__ - INFO - ==================================================
2025-08-27 08:43:56,593 - __main__ - INFO - üìÖ Started at: 2025-08-27 08:43:56
2025-08-27 08:43:56,593 - __main__ - INFO - üîß Dry run: No
2025-08-27 08:43:56,593 - __main__ - INFO - üìä Max articles: 10
2025-08-27 08:43:56,593 - __main__ - INFO - üß† LLM Provider: openai
2025-08-27 08:43:56,593 - __main__ - INFO - üì∫ Target channel: C09AUAZCQR1
2025-08-27 08:43:56,593 - __main__ - INFO - ==================================================
2025-08-27 08:43:56,593 - __main__ - INFO - üöÄ Starting Briefly Bot...
2025-08-27 08:43:56,593 - __main__ - INFO - ============================================================
2025-08-27 08:43:56,594 - __main__ - INFO - üîß Initializing services...
2025-08-27 08:43:56,594 - slackbot.services.aggregation_service - INFO - Initializing AggregationService
2025-08-27 08:43:56,594 - slackbot.collectors.base_collector - INFO - Initialized collector: ArXiv Collector
2025-08-27 08:43:56,594 - slackbot.collectors.arxiv_collector - INFO - Loaded 4 ArXiv sources
2025-08-27 08:43:56,594 - slackbot.collectors.arxiv_collector - INFO - ArXiv client available
2025-08-27 08:43:56,594 - slackbot.services.aggregation_service - INFO - ‚úÖ ArXiv collector initialized successfully
2025-08-27 08:43:56,594 - slackbot.collectors.base_collector - INFO - Initialized collector: NewsAPI Collector
2025-08-27 08:43:56,594 - slackbot.collectors.newsapi_org_collector - INFO - Loaded 4 NewsAPI sources
2025-08-27 08:43:56,594 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI client initialized successfully
2025-08-27 08:43:56,594 - slackbot.services.aggregation_service - INFO - ‚úÖ NewsAPI collector initialized successfully
2025-08-27 08:43:56,594 - slackbot.collectors.base_collector - INFO - Initialized collector: RSS Collector
2025-08-27 08:43:56,594 - slackbot.collectors.rss_collector - INFO - üì° Loaded 30 default RSS sources
2025-08-27 08:43:56,594 - slackbot.collectors.rss_collector - INFO - ‚úÖ RSS Collector initialized with 30 sources
2025-08-27 08:43:56,594 - slackbot.services.aggregation_service - INFO - ‚úÖ RSS collector initialized successfully
2025-08-27 08:43:56,594 - slackbot.collectors.base_collector - INFO - Initialized CollectorManager
2025-08-27 08:43:56,594 - slackbot.services.aggregation_service - INFO - üìä AggregationService initialized with 3 collectors
2025-08-27 08:43:56,595 - slackbot.services.summarizer_service - INFO - Initializing ContentProcessingService with provider: openai
2025-08-27 08:43:57,448 - slackbot.summarizer.tldr_summarizer - INFO - Initialized OpenAI TLDR summarizer with model: gpt-3.5-turbo
2025-08-27 08:43:57,518 - slackbot.summarizer.tldr_summarizer - INFO - Initialized Gemini fallback with model: gemini-1.5-flash
2025-08-27 08:43:57,518 - slackbot.services.summarizer_service - INFO - ‚úÖ Summarizer initialized successfully with openai
2025-08-27 08:43:57,518 - slackbot.utils.reranker - INFO - Initializing ArticleReranker
2025-08-27 08:43:57,518 - slackbot.services.summarizer_service - INFO - ‚úÖ Article reranker initialized successfully
2025-08-27 08:43:57,518 - slackbot.services.publisher_service - INFO - Initializing PublisherService with default platform: slack
2025-08-27 08:43:57,626 - slack_bolt.App - DEBUG - Sending a request - url: https://slack.com/api/auth.test, query_params: {}, body_params: {}, files: {}, json_body: None, headers: {'Content-Type': 'application/x-www-form-urlencoded', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.23.0 Python/3.11.13 slackclient/3.36.0 Linux/6.8.0-65-generic'}
2025-08-27 08:43:58,047 - slack_bolt.App - DEBUG - Received the following response - status: 200, headers: {'date': 'Wed, 27 Aug 2025 03:13:57 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': '6ab74cbcac2c2af46927236f5efe4417', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-oauth-scopes': 'chat:write,files:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aK539aWLMIwPanuALNwqrQAAECs', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '208', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-piwpzclo,envoy-edge-bom-czrorrwq', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '242', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-chau', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"url":"https:\/\/keyvaluesystems.slack.com\/","team":"KeyValue Software Systems","user":"briefly","team_id":"T4LJBDMDY","user_id":"U09BG266092","bot_id":"B09BG26606Q","is_enterprise_install":false}
2025-08-27 08:43:58,049 - slackbot.slack.publisher - INFO - Slack publisher initialized successfully
2025-08-27 08:43:58,049 - slackbot.services.publisher_service - INFO - ‚úÖ Slack publisher initialized successfully
2025-08-27 08:43:58,049 - slackbot.services.publisher_service - INFO - üì§ PublisherService initialized with 1 publishers
2025-08-27 08:43:58,050 - __main__ - INFO - ‚úÖ All services initialized successfully
2025-08-27 08:43:58,050 - __main__ - INFO - 
üì∞ Step 2: Collecting News
2025-08-27 08:43:58,050 - __main__ - INFO - ----------------------------------------
2025-08-27 08:43:58,051 - __main__ - INFO - üîç Starting news collection...
2025-08-27 08:43:58,051 - slackbot.services.aggregation_service - INFO - üéØ Collecting 10 articles with balanced sources: True
2025-08-27 08:43:58,051 - slackbot.services.aggregation_service - INFO - üîç Collecting from arxiv
2025-08-27 08:44:01,072 - slackbot.collectors.arxiv_collector - INFO - Fetched 20 papers from ArXiv AI Papers
2025-08-27 08:44:03,615 - slackbot.collectors.arxiv_collector - INFO - Fetched 12 papers from ArXiv Computer Vision
2025-08-27 08:44:05,356 - slackbot.collectors.arxiv_collector - INFO - Fetched 5 papers from ArXiv NLP Papers
2025-08-27 08:44:06,954 - slackbot.collectors.arxiv_collector - INFO - Fetched 4 papers from ArXiv Robotics
2025-08-27 08:44:06,954 - slackbot.collectors.arxiv_collector - INFO - Collected 41 total papers from ArXiv Collector
2025-08-27 08:44:06,954 - slackbot.services.aggregation_service - INFO - ‚úÖ Collected 41 articles from arxiv
2025-08-27 08:44:06,954 - slackbot.services.aggregation_service - INFO - üìä arxiv: collected 4 articles
2025-08-27 08:44:06,955 - slackbot.services.aggregation_service - INFO - üîç Collecting from newsapi
2025-08-27 08:44:06,955 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI params for Tech News AI: {'q': 'artificial intelligence OR AI', 'category': 'technology', 'language': 'en', 'country': 'us', 'page_size': 15}
2025-08-27 08:44:08,449 - slackbot.collectors.newsapi_org_collector - INFO - No results with category for Tech News AI, trying broader search...
2025-08-27 08:44:09,919 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI response for Tech News AI: status=ok, totalResults=16580, articles=15
2025-08-27 08:44:09,920 - slackbot.collectors.newsapi_org_collector - INFO - Fetched 14 articles from Tech News AI
2025-08-27 08:44:09,921 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI params for Business AI News: {'q': 'AI', 'category': 'business', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-27 08:44:10,763 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI response for Business AI News: status=ok, totalResults=11, articles=6
2025-08-27 08:44:10,764 - slackbot.collectors.newsapi_org_collector - INFO - Fetched 6 articles from Business AI News
2025-08-27 08:44:10,764 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI params for Science AI News: {'q': 'AI', 'category': 'science', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-27 08:44:11,174 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI response for Science AI News: status=ok, totalResults=19, articles=10
2025-08-27 08:44:11,174 - slackbot.collectors.newsapi_org_collector - INFO - Fetched 10 articles from Science AI News
2025-08-27 08:44:11,176 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI params for Health AI News: {'q': 'AI', 'category': 'health', 'language': 'en', 'country': 'us', 'page_size': 10}
2025-08-27 08:44:12,119 - slackbot.collectors.newsapi_org_collector - INFO - NewsAPI response for Health AI News: status=ok, totalResults=34, articles=5
2025-08-27 08:44:12,119 - slackbot.collectors.newsapi_org_collector - INFO - Fetched 5 articles from Health AI News
2025-08-27 08:44:12,120 - slackbot.collectors.newsapi_org_collector - INFO - Collected 35 total articles from NewsAPI Collector
2025-08-27 08:44:12,120 - slackbot.services.aggregation_service - INFO - ‚úÖ Collected 35 articles from newsapi
2025-08-27 08:44:12,120 - slackbot.services.aggregation_service - INFO - üìä newsapi: collected 3 articles
2025-08-27 08:44:12,121 - slackbot.services.aggregation_service - INFO - üîç Collecting from rss
2025-08-27 08:44:12,121 - slackbot.collectors.rss_collector - INFO - üì° Collecting articles from 30 RSS sources...
2025-08-27 08:44:12,121 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: TechCrunch AI
2025-08-27 08:44:12,369 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 15 articles from TechCrunch AI
2025-08-27 08:44:12,369 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium AI
2025-08-27 08:44:12,846 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 10 articles from Medium AI
2025-08-27 08:44:12,846 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium Artificial Intelligence
2025-08-27 08:44:13,825 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 9 articles from Medium Artificial Intelligence
2025-08-27 08:44:13,825 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium Machine Learning
2025-08-27 08:44:14,318 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 9 articles from Medium Machine Learning
2025-08-27 08:44:14,318 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium Deep Learning
2025-08-27 08:44:14,731 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 10 articles from Medium Deep Learning
2025-08-27 08:44:14,731 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium Neural Networks
2025-08-27 08:44:15,342 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 10 articles from Medium Neural Networks
2025-08-27 08:44:15,342 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium Computer Vision
2025-08-27 08:44:15,955 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 9 articles from Medium Computer Vision
2025-08-27 08:44:15,955 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium NLP
2025-08-27 08:44:16,738 - slackbot.collectors.rss_collector - WARNING - ‚ö†Ô∏è No entries found in RSS feed: Medium NLP
2025-08-27 08:44:16,739 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium Software Development
2025-08-27 08:44:17,162 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 10 articles from Medium Software Development
2025-08-27 08:44:17,162 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium Programming
2025-08-27 08:44:17,887 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 9 articles from Medium Programming
2025-08-27 08:44:17,888 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium Python
2025-08-27 08:44:18,664 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 10 articles from Medium Python
2025-08-27 08:44:18,664 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium JavaScript
2025-08-27 08:44:19,412 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 10 articles from Medium JavaScript
2025-08-27 08:44:19,412 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium Data Science
2025-08-27 08:44:21,852 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 10 articles from Medium Data Science
2025-08-27 08:44:21,852 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium RAG
2025-08-27 08:44:22,237 - slackbot.collectors.rss_collector - WARNING - ‚ö†Ô∏è No entries found in RSS feed: Medium RAG
2025-08-27 08:44:22,238 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium Agentic AI
2025-08-27 08:44:23,362 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 8 articles from Medium Agentic AI
2025-08-27 08:44:23,363 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium LangChain
2025-08-27 08:44:24,158 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 8 articles from Medium LangChain
2025-08-27 08:44:24,159 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium Vector Database
2025-08-27 08:44:24,984 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 8 articles from Medium Vector Database
2025-08-27 08:44:24,984 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium LLM
2025-08-27 08:44:26,146 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 8 articles from Medium LLM
2025-08-27 08:44:26,146 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium OpenAI
2025-08-27 08:44:26,921 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 8 articles from Medium OpenAI
2025-08-27 08:44:26,921 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium API Development
2025-08-27 08:44:27,921 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 8 articles from Medium API Development
2025-08-27 08:44:27,921 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium DevOps
2025-08-27 08:44:28,355 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 8 articles from Medium DevOps
2025-08-27 08:44:28,355 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Medium Cloud Computing
2025-08-27 08:44:29,273 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 8 articles from Medium Cloud Computing
2025-08-27 08:44:29,273 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: VentureBeat AI
2025-08-27 08:44:29,535 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 10 articles from VentureBeat AI
2025-08-27 08:44:29,536 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: MIT Technology Review AI
2025-08-27 08:44:30,256 - slackbot.collectors.rss_collector - WARNING - ‚ö†Ô∏è RSS parsing issues for MIT Technology Review AI: <unknown>:2:0: syntax error
2025-08-27 08:44:30,256 - slackbot.collectors.rss_collector - WARNING - ‚ö†Ô∏è No entries found in RSS feed: MIT Technology Review AI
2025-08-27 08:44:30,256 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Ars Technica AI
2025-08-27 08:44:31,098 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 8 articles from Ars Technica AI
2025-08-27 08:44:31,098 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Wired Technology
2025-08-27 08:44:31,397 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 6 articles from Wired Technology
2025-08-27 08:44:31,397 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: The Verge AI
2025-08-27 08:44:32,270 - slackbot.collectors.rss_collector - WARNING - ‚ö†Ô∏è No entries found in RSS feed: The Verge AI
2025-08-27 08:44:32,270 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: AI News
2025-08-27 08:44:42,534 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 10 articles from AI News
2025-08-27 08:44:42,534 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: Synced AI
2025-08-27 08:44:43,941 - slackbot.collectors.rss_collector - INFO - ‚úÖ Fetched 8 articles from Synced AI
2025-08-27 08:44:43,941 - slackbot.collectors.rss_collector - INFO - üì° Fetching RSS feed: DeepAI
2025-08-27 08:44:44,565 - slackbot.collectors.rss_collector - WARNING - ‚ö†Ô∏è RSS parsing issues for DeepAI: <unknown>:24:2: mismatched tag
2025-08-27 08:44:44,565 - slackbot.collectors.rss_collector - WARNING - ‚ö†Ô∏è No entries found in RSS feed: DeepAI
2025-08-27 08:44:44,566 - slackbot.collectors.rss_collector - INFO - ‚úÖ RSS collection complete: 3 articles
2025-08-27 08:44:44,566 - slackbot.services.aggregation_service - INFO - ‚úÖ Collected 3 articles from rss
2025-08-27 08:44:44,566 - slackbot.services.aggregation_service - INFO - üìä rss: collected 3 articles
2025-08-27 08:44:44,566 - slackbot.services.aggregation_service - INFO - ‚úÖ Balanced collection complete: 10 articles from 3 sources
2025-08-27 08:44:44,567 - __main__ - INFO - ‚úÖ Successfully collected 10 articles
2025-08-27 08:44:44,567 - __main__ - INFO -   1. Style4D-Bench: A Benchmark Suite for 4D Stylization...
2025-08-27 08:44:44,567 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-27 08:44:44,567 - __main__ - INFO -      Category: Research Papers
2025-08-27 08:44:44,567 - __main__ - INFO -   2. Model Context Protocols in Adaptive Transport Systems: A Sur...
2025-08-27 08:44:44,567 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-27 08:44:44,567 - __main__ - INFO -      Category: Research Papers
2025-08-27 08:44:44,567 - __main__ - INFO -   3. StepWiser: Stepwise Generative Judges for Wiser Reasoning...
2025-08-27 08:44:44,567 - __main__ - INFO -      Source: ArXiv AI Papers (arxiv)
2025-08-27 08:44:44,567 - __main__ - INFO -      Category: Research Papers
2025-08-27 08:44:44,567 - __main__ - INFO - 
üß† Step 3: Creating TLDR Summaries
2025-08-27 08:44:44,567 - __main__ - INFO - ----------------------------------------
2025-08-27 08:44:44,567 - __main__ - INFO - üß† Starting TLDR summarization...
2025-08-27 08:44:44,567 - slackbot.services.summarizer_service - INFO - üîÑ Reranking 10 articles using strategy: smart
2025-08-27 08:44:44,567 - slackbot.utils.reranker - INFO - üîÑ Reranking 10 articles using strategy: smart
2025-08-27 08:44:44,577 - slackbot.utils.reranker - INFO - ‚úÖ Reranking complete. Top article: newsapi - Tech News AI
2025-08-27 08:44:44,578 - slackbot.services.summarizer_service - INFO - üìä Reranking complete. Top source: newsapi
2025-08-27 08:44:44,578 - slackbot.services.summarizer_service - INFO -   newsapi: 3 articles
2025-08-27 08:44:44,578 - slackbot.services.summarizer_service - INFO -   rss: 3 articles
2025-08-27 08:44:44,578 - slackbot.services.summarizer_service - INFO -   arxiv: 4 articles
2025-08-27 08:44:44,578 - slackbot.services.summarizer_service - INFO - üéØ Using summarization strategy: individual
2025-08-27 08:44:44,578 - slackbot.services.summarizer_service - INFO - üìù Batch summarizing 10 articles
2025-08-27 08:44:44,578 - slackbot.services.summarizer_service - INFO -   Processing 1/10: AI-powered SG60 Heart&Soul Experience launched at ...
2025-08-27 08:44:44,578 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: AI-powered SG60 Heart&Soul Experience launched at ...
2025-08-27 08:44:44,612 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-709149b4-a636-4781-8329-7cc4c96059a9', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: AI-powered SG60 Heart&Soul Experience launched at Orchard Central\nContent: SINGAPORE: A flagship exhibition marking Singapore\'s 60th year of independence opened on Tuesday (Aug 26) at Orchard Central, using generative artificial intelligence and immersive storytelling to re‚Ä¶ [+1211 chars]\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-27 08:44:44,616 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-27 08:44:44,616 - httpcore.connection - DEBUG - connect_tcp.started host='api.openai.com' port=443 local_address=None timeout=None socket_options=None
2025-08-27 08:44:44,680 - httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.sync.SyncStream object at 0x73112c0a7d10>
2025-08-27 08:44:44,680 - httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x731130ed2f90> server_hostname='api.openai.com' timeout=None
2025-08-27 08:44:44,706 - httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.sync.SyncStream object at 0x7311312ddfd0>
2025-08-27 08:44:44,706 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-27 08:44:44,706 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-27 08:44:44,707 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-27 08:44:44,707 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-27 08:44:44,707 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-27 08:44:46,517 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 27 Aug 2025 03:14:46 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1037'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1218'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999552'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_934da9b4bf38478eacee0f37c2a2c87a'), (b'cf-cache-status', b'DYNAMIC'), (b'Set-Cookie', b'__cf_bm=MsmwDyI.c38OESsdeP3PoXqJIH9xn8OkAk0WxT6ly8I-1756264486-1.0.1.1-qPtjuC7GYeuDwF58a7lTadldgHE45mpc1RQp57.hmMKcJvNv3GlY0hvHfPWXyzNsPwrFztYBLC_b51D4JUKj5QT6oi94SlebjsP0tMVMWPU; path=/; expires=Wed, 27-Aug-25 03:44:46 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Set-Cookie', b'_cfuvid=2XPRXfPYAu9gMK6qvEVxeFmjnbzAR5p9M2U1toNy30k-1756264486504-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9758668578e454e4-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-27 08:44:46,519 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-27 08:44:46,520 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-27 08:44:46,521 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-27 08:44:46,521 - httpcore.http11 - DEBUG - response_closed.started
2025-08-27 08:44:46,521 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-27 08:44:46,522 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers([('date', 'Wed, 27 Aug 2025 03:14:46 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'keyvalue-rtv23o'), ('openai-processing-ms', '1037'), ('openai-project', 'proj_whQdFja0l3II6fu7PPtC7wv5'), ('openai-version', '2020-10-01'), ('x-envoy-upstream-service-time', '1218'), ('x-ratelimit-limit-requests', '10000'), ('x-ratelimit-limit-tokens', '50000000'), ('x-ratelimit-remaining-requests', '9999'), ('x-ratelimit-remaining-tokens', '49999552'), ('x-ratelimit-reset-requests', '6ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_934da9b4bf38478eacee0f37c2a2c87a'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=MsmwDyI.c38OESsdeP3PoXqJIH9xn8OkAk0WxT6ly8I-1756264486-1.0.1.1-qPtjuC7GYeuDwF58a7lTadldgHE45mpc1RQp57.hmMKcJvNv3GlY0hvHfPWXyzNsPwrFztYBLC_b51D4JUKj5QT6oi94SlebjsP0tMVMWPU; path=/; expires=Wed, 27-Aug-25 03:44:46 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-content-type-options', 'nosniff'), ('set-cookie', '_cfuvid=2XPRXfPYAu9gMK6qvEVxeFmjnbzAR5p9M2U1toNy30k-1756264486504-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None'), ('server', 'cloudflare'), ('cf-ray', '9758668578e454e4-MAA'), ('content-encoding', 'gzip'), ('alt-svc', 'h3=":443"; ma=86400')])
2025-08-27 08:44:46,522 - openai._base_client - DEBUG - request_id: req_934da9b4bf38478eacee0f37c2a2c87a
2025-08-27 08:44:46,535 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-27 08:44:46,535 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-27 08:44:46,536 - slackbot.services.summarizer_service - INFO -   Processing 2/10: How one AI startup is helping rice farmers battle ...
2025-08-27 08:44:46,536 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: How one AI startup is helping rice farmers battle ...
2025-08-27 08:44:46,538 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-a6add34a-58fd-44de-a116-2871aace32af', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: How one AI startup is helping rice farmers battle climate change\nContent: Mitti Labs is working with The Nature Conservancy to expand the use of climate-friendly rice farming practices in India. The startup uses its AI to verify reductions in methane emissions.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-27 08:44:46,539 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-27 08:44:46,539 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-27 08:44:46,539 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-27 08:44:46,540 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-27 08:44:46,540 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-27 08:44:46,540 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-27 08:44:48,864 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 27 Aug 2025 03:14:48 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1195'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1303'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999561'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_edd1e8e895b946b891c5f07c08c74656'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'97586690efea54e4-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-27 08:44:48,864 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-27 08:44:48,864 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-27 08:44:48,925 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-27 08:44:48,926 - httpcore.http11 - DEBUG - response_closed.started
2025-08-27 08:44:48,927 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-27 08:44:48,927 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 27 Aug 2025 03:14:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1195', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1303', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999561', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_edd1e8e895b946b891c5f07c08c74656', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '97586690efea54e4-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-27 08:44:48,927 - openai._base_client - DEBUG - request_id: req_edd1e8e895b946b891c5f07c08c74656
2025-08-27 08:44:48,936 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-27 08:44:48,937 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-27 08:44:48,937 - slackbot.services.summarizer_service - INFO -   Processing 3/10: ZJLD Group Announces Interim Results for FY2025...
2025-08-27 08:44:48,938 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: ZJLD Group Announces Interim Results for FY2025...
2025-08-27 08:44:48,940 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-5a22161c-5459-4bd9-a985-6ae19d3969ec', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: ZJLD Group Announces Interim Results for FY2025\nContent: Forging Resilience Amid Industry Headwinds, Driving High-Quality Transformation Through Innovation and Cultural Stewardship\r\nHONG KONG SAR - Media OutReach Neswire - 26 August 2025 - ZJLD Group Inc. ‚Ä¶ [+11530 chars]\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-27 08:44:48,942 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-27 08:44:48,942 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-27 08:44:48,943 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-27 08:44:48,943 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-27 08:44:48,943 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-27 08:44:48,943 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-27 08:44:51,233 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 27 Aug 2025 03:14:50 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'975'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1073'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999557'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_7bbfe2cc9cc9450d91749b448900db1d'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'9758669ffdf754e4-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-27 08:44:51,234 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-27 08:44:51,234 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-27 08:44:51,253 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-27 08:44:51,253 - httpcore.http11 - DEBUG - response_closed.started
2025-08-27 08:44:51,253 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-27 08:44:51,253 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 27 Aug 2025 03:14:50 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '975', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1073', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999557', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_7bbfe2cc9cc9450d91749b448900db1d', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '9758669ffdf754e4-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-27 08:44:51,253 - openai._base_client - DEBUG - request_id: req_7bbfe2cc9cc9450d91749b448900db1d
2025-08-27 08:44:51,261 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-27 08:44:51,261 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-27 08:44:51,261 - slackbot.services.summarizer_service - INFO -   Processing 4/10: Flamengo seal biggest ever win in Brasileir√£o poin...
2025-08-27 08:44:51,261 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Flamengo seal biggest ever win in Brasileir√£o poin...
2025-08-27 08:44:51,264 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-99747027-1d64-4849-959e-ad04af3c170e', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Flamengo seal biggest ever win in Brasileir√£o points system era\nContent: Flamengo made history on Monday (25), with an 8-0 win over Vit√≥ria, at Maracan√£, in the 21st round of the Brasileir√£o.\r\nThe score reflects, nothing more, nothing less, the BIGGEST ROUT IN THE HISTORY‚Ä¶ [+786 chars]\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-27 08:44:51,265 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-27 08:44:51,265 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-27 08:44:51,265 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-27 08:44:51,266 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-27 08:44:51,266 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-27 08:44:51,266 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-27 08:44:52,982 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 27 Aug 2025 03:14:52 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1340'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1374'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999553'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_4cadda1821f446a8bcd88b882a6769b1'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'975866ae7c8654e4-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-27 08:44:52,983 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-27 08:44:52,984 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-27 08:44:53,031 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-27 08:44:53,031 - httpcore.http11 - DEBUG - response_closed.started
2025-08-27 08:44:53,031 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-27 08:44:53,032 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 27 Aug 2025 03:14:52 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1340', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1374', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999553', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_4cadda1821f446a8bcd88b882a6769b1', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '975866ae7c8654e4-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-27 08:44:53,032 - openai._base_client - DEBUG - request_id: req_4cadda1821f446a8bcd88b882a6769b1
2025-08-27 08:44:53,045 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-27 08:44:53,046 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-27 08:44:53,046 - slackbot.services.summarizer_service - INFO -   Processing 5/10: Style4D-Bench: A Benchmark Suite for 4D Stylizatio...
2025-08-27 08:44:53,046 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Style4D-Bench: A Benchmark Suite for 4D Stylizatio...
2025-08-27 08:44:53,049 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-1d92df73-16d5-41ce-a408-57effa4a6b3c', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Style4D-Bench: A Benchmark Suite for 4D Stylization\nContent: We introduce Style4D-Bench, the first benchmark suite specifically designed\nfor 4D stylization, with the goal of standardizing evaluation and facilitating\nprogress in this emerging area. Style4D-Bench comprises: 1) a comprehensive\nevaluation protocol measuring spatial fidelity, temporal coherence, and\nmulti-view consistency through both perceptual and quantitative metrics, 2) a\nstrong baseline that make an initial attempt for 4D stylization, and 3) a\ncurated collection of high-resolution dynamic 4D scenes with diverse motions\nand complex backgrounds. To establish a strong baseline, we present Style4D, a\nnovel framework built upon 4D Gaussian Splatting. It consists of three key\ncomponents: a basic 4DGS scene representation to capture reliable geometry, a\nStyle Gaussian Representation that leverages lightweight per-Gaussian MLPs for\ntemporally and spatially aware appearance control, and a Holistic\nGeometry-Preserved Style Transfer module designed to enhance spatio-temporal\nconsistency via contrastive coherence learning and structural content\npreservation. Extensive experiments on Style4D-Bench demonstrate that Style4D\nachieves state-of-the-art performance in 4D stylization, producing fine-grained\nstylistic details with stable temporal dynamics and consistent multi-view\nrendering. We expect Style4D-Bench to become a valuable resource for\nbenchmarking and advancing research in stylized rendering of dynamic 3D scenes.\nProject page: https://becky-catherine.github.io/Style4D . Code:\nhttps://github.com/Becky-catherine/Style4D-Bench .\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-27 08:44:53,050 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-27 08:44:53,050 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-27 08:44:53,051 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-27 08:44:53,051 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-27 08:44:53,052 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-27 08:44:53,052 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-27 08:44:57,181 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 27 Aug 2025 03:14:57 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'2144'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'2282'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999222'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_276072d3325b484b965c130f5c9eed44'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'975866b9aae854e4-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-27 08:44:57,182 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-27 08:44:57,183 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-27 08:44:57,354 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-27 08:44:57,355 - httpcore.http11 - DEBUG - response_closed.started
2025-08-27 08:44:57,355 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-27 08:44:57,356 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 27 Aug 2025 03:14:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '2144', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '2282', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999222', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_276072d3325b484b965c130f5c9eed44', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '975866b9aae854e4-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-27 08:44:57,356 - openai._base_client - DEBUG - request_id: req_276072d3325b484b965c130f5c9eed44
2025-08-27 08:44:57,400 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-27 08:44:57,400 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-27 08:44:57,400 - slackbot.services.summarizer_service - INFO -   Processing 6/10: Model Context Protocols in Adaptive Transport Syst...
2025-08-27 08:44:57,400 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Model Context Protocols in Adaptive Transport Syst...
2025-08-27 08:44:57,404 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-4986bf4d-1f23-4481-9333-fc17afc98169', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Model Context Protocols in Adaptive Transport Systems: A Survey\nContent: The rapid expansion of interconnected devices, autonomous systems, and AI\napplications has created severe fragmentation in adaptive transport systems,\nwhere diverse protocols and context sources remain isolated. This survey\nprovides the first systematic investigation of the Model Context Protocol (MCP)\nas a unifying paradigm, highlighting its ability to bridge protocol-level\nadaptation with context-aware decision making. Analyzing established\nliterature, we show that existing efforts have implicitly converged toward\nMCP-like architectures, signaling a natural evolution from fragmented solutions\nto standardized integration frameworks. We propose a five-category taxonomy\ncovering adaptive mechanisms, context-aware frameworks, unification models,\nintegration strategies, and MCP-enabled architectures. Our findings reveal\nthree key insights: traditional transport protocols have reached the limits of\nisolated adaptation, MCP\'s client-server and JSON-RPC structure enables\nsemantic interoperability, and AI-driven transport demands integration\nparadigms uniquely suited to MCP. Finally, we present a research roadmap\npositioning MCP as a foundation for next-generation adaptive, context-aware,\nand intelligent transport infrastructures.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-27 08:44:57,405 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-27 08:44:57,406 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-27 08:44:57,406 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-27 08:44:57,406 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-27 08:44:57,406 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-27 08:44:57,407 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-27 08:44:59,100 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 27 Aug 2025 03:14:59 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1382'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1405'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999297'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_e3fe9f50d05b4a9ca1693c95452d4d7b'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'975866d4df9754e4-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-27 08:44:59,100 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-27 08:44:59,100 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-27 08:44:59,104 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-27 08:44:59,104 - httpcore.http11 - DEBUG - response_closed.started
2025-08-27 08:44:59,104 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-27 08:44:59,104 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 27 Aug 2025 03:14:59 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1382', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1405', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999297', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_e3fe9f50d05b4a9ca1693c95452d4d7b', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '975866d4df9754e4-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-27 08:44:59,105 - openai._base_client - DEBUG - request_id: req_e3fe9f50d05b4a9ca1693c95452d4d7b
2025-08-27 08:44:59,142 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-27 08:44:59,142 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-27 08:44:59,142 - slackbot.services.summarizer_service - INFO -   Processing 7/10: StepWiser: Stepwise Generative Judges for Wiser Re...
2025-08-27 08:44:59,143 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: StepWiser: Stepwise Generative Judges for Wiser Re...
2025-08-27 08:44:59,145 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-49e7157c-958e-40d9-b987-fccbff63292e', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: StepWiser: Stepwise Generative Judges for Wiser Reasoning\nContent: As models increasingly leverage multi-step reasoning strategies to solve\ncomplex problems, supervising the logical validity of these intermediate steps\nhas become a critical research challenge. Process reward models address this by\nproviding step-by-step feedback, but current approaches have two major\ndrawbacks: they typically function as classifiers without providing\nexplanations, and their reliance on supervised fine-tuning with static datasets\nlimits generalization. Inspired by recent advances, we reframe stepwise reward\nmodeling from a classification task to a reasoning task itself. We thus propose\na generative judge that reasons about the policy model\'s reasoning steps (i.e.,\nmeta-reasons), outputting thinking tokens before delivering a final verdict.\nOur model, StepWiser, is trained by reinforcement learning using relative\noutcomes of rollouts. We show it provides (i) better judgment accuracy on\nintermediate steps than existing methods; (ii) can be used to improve the\npolicy model at training time; and (iii) improves inference-time search.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-27 08:44:59,146 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-27 08:44:59,147 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-27 08:44:59,147 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-27 08:44:59,147 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-27 08:44:59,147 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-27 08:44:59,147 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-27 08:45:00,457 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 27 Aug 2025 03:15:00 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'945'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'979'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999344'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_0ef2b80246c14be3975da3835db3e97b'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'975866dfbb9b54e4-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-27 08:45:00,458 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-27 08:45:00,458 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-27 08:45:00,580 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-27 08:45:00,580 - httpcore.http11 - DEBUG - response_closed.started
2025-08-27 08:45:00,581 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-27 08:45:00,581 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 27 Aug 2025 03:15:00 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '945', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '979', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999344', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_0ef2b80246c14be3975da3835db3e97b', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '975866dfbb9b54e4-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-27 08:45:00,581 - openai._base_client - DEBUG - request_id: req_0ef2b80246c14be3975da3835db3e97b
2025-08-27 08:45:00,587 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-27 08:45:00,587 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-27 08:45:00,587 - slackbot.services.summarizer_service - INFO -   Processing 8/10: Predicting the Order of Upcoming Tokens Improves L...
2025-08-27 08:45:00,588 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Predicting the Order of Upcoming Tokens Improves L...
2025-08-27 08:45:00,590 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-2123c7a3-dcb6-4e74-b009-765680d69351', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Predicting the Order of Upcoming Tokens Improves Language Modeling\nContent: Multi-Token Prediction (MTP) has been proposed as an auxiliary objective to\nimprove next-token prediction (NTP) in language model training but shows\ninconsistent improvements, underperforming in standard NLP benchmarks. We argue\nthat MTP\'s exact future token prediction is too difficult as an auxiliary loss.\nInstead, we propose Token Order Prediction (TOP), which trains models to order\nupcoming tokens by their proximity using a learning-to-rank loss. TOP requires\nonly a single additional unembedding layer compared to MTP\'s multiple\ntransformer layers. We pretrain models of 340M, 1.8B, and 7B parameters using\nNTP, MTP, and TOP objectives. Results on eight standard NLP benchmarks show\nthat TOP overall outperforms both NTP and MTP even at scale. Our code is\navailable at https://github.com/zaydzuhri/token-order-prediction\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-27 08:45:00,591 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-27 08:45:00,591 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-27 08:45:00,592 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-27 08:45:00,592 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-27 08:45:00,593 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-27 08:45:00,593 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-27 08:45:02,813 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 27 Aug 2025 03:15:02 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1553'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1703'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999400'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_a8d46172381b450ca6f01c1228e4711f'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'975866e8cd9f54e4-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-27 08:45:02,814 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-27 08:45:02,815 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-27 08:45:02,981 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-27 08:45:02,981 - httpcore.http11 - DEBUG - response_closed.started
2025-08-27 08:45:02,982 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-27 08:45:02,982 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 27 Aug 2025 03:15:02 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1553', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1703', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999400', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_a8d46172381b450ca6f01c1228e4711f', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '975866e8cd9f54e4-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-27 08:45:02,983 - openai._base_client - DEBUG - request_id: req_a8d46172381b450ca6f01c1228e4711f
2025-08-27 08:45:03,014 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-27 08:45:03,014 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-27 08:45:03,015 - slackbot.services.summarizer_service - INFO -   Processing 9/10: Harvard dropouts to launch ‚Äòalways on‚Äô AI smart gl...
2025-08-27 08:45:03,015 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Harvard dropouts to launch ‚Äòalways on‚Äô AI smart gl...
2025-08-27 08:45:03,020 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-27931bf2-cb2c-485c-8bbe-b37c7669a238', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Harvard dropouts to launch ‚Äòalways on‚Äô AI smart glasses that listen and record every conversation\nContent: After developing a facial-recognition app for Meta‚Äôs Ray-Ban glasses and doxing random people, two former Harvard students are now launching a startup that makes smart glasses with an always-on microphone.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-27 08:45:03,021 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-27 08:45:03,022 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-27 08:45:03,022 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-27 08:45:03,023 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-27 08:45:03,023 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-27 08:45:03,023 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-27 08:45:04,851 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 27 Aug 2025 03:15:04 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1179'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1320'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999546'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_f3d52a511e3a4826a55297de34c7e85d'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'975866f7fba254e4-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-27 08:45:04,852 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-27 08:45:04,852 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-27 08:45:04,853 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-27 08:45:04,853 - httpcore.http11 - DEBUG - response_closed.started
2025-08-27 08:45:04,854 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-27 08:45:04,854 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 27 Aug 2025 03:15:04 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1179', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1320', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999546', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_f3d52a511e3a4826a55297de34c7e85d', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '975866f7fba254e4-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-27 08:45:04,854 - openai._base_client - DEBUG - request_id: req_f3d52a511e3a4826a55297de34c7e85d
2025-08-27 08:45:04,871 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-27 08:45:04,872 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-27 08:45:04,872 - slackbot.services.summarizer_service - INFO -   Processing 10/10: Meta to add 100MW of solar power from US gear...
2025-08-27 08:45:04,872 - slackbot.services.summarizer_service - INFO - üìù Creating TLDR for article: Meta to add 100MW of solar power from US gear...
2025-08-27 08:45:04,878 - openai._base_client - DEBUG - Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'idempotency_key': 'stainless-python-retry-ae6d09f8-7b03-4436-b68f-5119b9daf0ee', 'json_data': {'messages': [{'content': 'You are an expert AI news analyst creating TLDR summaries. Focus on the key facts, why it matters, and make it engaging for busy professionals. Keep it concise and actionable.', 'role': 'system'}, {'content': 'Create a TLDR summary for this article:\n\nTitle: Meta to add 100MW of solar power from US gear\nContent: The social media company is adding another tranche of solar to power a new AI data center in South Carolina.\n\nThe output should be formatted as a JSON instance that conforms to the JSON schema below.\n\nAs an example, for the schema {"properties": {"foo": {"title": "Foo", "description": "a list of strings", "type": "array", "items": {"type": "string"}}}, "required": ["foo"]}\nthe object {"foo": ["bar", "baz"]} is a well-formatted instance of the schema. The object {"properties": {"foo": ["bar", "baz"]}} is not well-formatted.\n\nHere is the output schema:\n```\n{"description": "Structured TLDR output for individual articles.", "properties": {"tldr": {"description": "2-3 sentence TLDR summary of the article", "title": "Tldr", "type": "string"}, "key_facts": {"description": "3-5 key facts or takeaways", "items": {"type": "string"}, "title": "Key Facts", "type": "array"}, "why_matters": {"description": "1-2 sentences explaining why this matters to AI/ML professionals", "title": "Why Matters", "type": "string"}, "reading_time": {"description": "Estimated reading time (e.g., \'2 min read\')", "title": "Reading Time", "type": "string"}, "difficulty": {"description": "Content difficulty level: \'Beginner\', \'Intermediate\', or \'Advanced\'", "title": "Difficulty", "type": "string"}}, "required": ["tldr", "key_facts", "why_matters", "reading_time", "difficulty"]}\n```', 'role': 'user'}], 'model': 'gpt-3.5-turbo', 'max_completion_tokens': 2048, 'stream': False, 'temperature': 0.3}}
2025-08-27 08:45:04,880 - openai._base_client - DEBUG - Sending HTTP Request: POST https://api.openai.com/v1/chat/completions
2025-08-27 08:45:04,881 - httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
2025-08-27 08:45:04,881 - httpcore.http11 - DEBUG - send_request_headers.complete
2025-08-27 08:45:04,882 - httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
2025-08-27 08:45:04,882 - httpcore.http11 - DEBUG - send_request_body.complete
2025-08-27 08:45:04,882 - httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
2025-08-27 08:45:06,893 - httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Date', b'Wed, 27 Aug 2025 03:15:06 GMT'), (b'Content-Type', b'application/json'), (b'Transfer-Encoding', b'chunked'), (b'Connection', b'keep-alive'), (b'access-control-expose-headers', b'X-Request-ID'), (b'openai-organization', b'keyvalue-rtv23o'), (b'openai-processing-ms', b'1586'), (b'openai-project', b'proj_whQdFja0l3II6fu7PPtC7wv5'), (b'openai-version', b'2020-10-01'), (b'x-envoy-upstream-service-time', b'1618'), (b'x-ratelimit-limit-requests', b'10000'), (b'x-ratelimit-limit-tokens', b'50000000'), (b'x-ratelimit-remaining-requests', b'9999'), (b'x-ratelimit-remaining-tokens', b'49999585'), (b'x-ratelimit-reset-requests', b'6ms'), (b'x-ratelimit-reset-tokens', b'0s'), (b'x-request-id', b'req_f8b76691eefc417183b59859f60bcd9d'), (b'cf-cache-status', b'DYNAMIC'), (b'Strict-Transport-Security', b'max-age=31536000; includeSubDomains; preload'), (b'X-Content-Type-Options', b'nosniff'), (b'Server', b'cloudflare'), (b'CF-RAY', b'975867039b9254e4-MAA'), (b'Content-Encoding', b'gzip'), (b'alt-svc', b'h3=":443"; ma=86400')])
2025-08-27 08:45:06,895 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-08-27 08:45:06,895 - httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
2025-08-27 08:45:06,914 - httpcore.http11 - DEBUG - receive_response_body.complete
2025-08-27 08:45:06,915 - httpcore.http11 - DEBUG - response_closed.started
2025-08-27 08:45:06,915 - httpcore.http11 - DEBUG - response_closed.complete
2025-08-27 08:45:06,915 - openai._base_client - DEBUG - HTTP Response: POST https://api.openai.com/v1/chat/completions "200 OK" Headers({'date': 'Wed, 27 Aug 2025 03:15:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'keyvalue-rtv23o', 'openai-processing-ms': '1586', 'openai-project': 'proj_whQdFja0l3II6fu7PPtC7wv5', 'openai-version': '2020-10-01', 'x-envoy-upstream-service-time': '1618', 'x-ratelimit-limit-requests': '10000', 'x-ratelimit-limit-tokens': '50000000', 'x-ratelimit-remaining-requests': '9999', 'x-ratelimit-remaining-tokens': '49999585', 'x-ratelimit-reset-requests': '6ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_f8b76691eefc417183b59859f60bcd9d', 'cf-cache-status': 'DYNAMIC', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '975867039b9254e4-MAA', 'content-encoding': 'gzip', 'alt-svc': 'h3=":443"; ma=86400'})
2025-08-27 08:45:06,916 - openai._base_client - DEBUG - request_id: req_f8b76691eefc417183b59859f60bcd9d
2025-08-27 08:45:06,944 - slackbot.services.summarizer_service - INFO - ‚úÖ TLDR created successfully for article
2025-08-27 08:45:06,944 - slackbot.services.summarizer_service - INFO -     ‚úÖ Summary created using openai
2025-08-27 08:45:06,944 - slackbot.services.summarizer_service - INFO - ‚úÖ Batch summarization complete: 10/10 successful
2025-08-27 08:45:06,945 - __main__ - INFO - ‚úÖ Successfully created 10 TLDR summaries
2025-08-27 08:45:06,945 - __main__ - INFO - 
üí¨ Step 4: Creating Slack Message
2025-08-27 08:45:06,945 - __main__ - INFO - ----------------------------------------
2025-08-27 08:45:06,945 - __main__ - INFO - üí¨ Creating Slack message...
2025-08-27 08:45:06,945 - __main__ - INFO - ‚úÖ Slack message created with 23 blocks
2025-08-27 08:45:06,945 - __main__ - INFO - 
üì§ Step 5: Publishing to Slack
2025-08-27 08:45:06,945 - __main__ - INFO - ----------------------------------------
2025-08-27 08:45:06,945 - __main__ - INFO - üì§ Publishing to Slack channel C09AUAZCQR1...
2025-08-27 08:45:06,946 - slackbot.services.publisher_service - INFO - üì§ Publishing message to slack
2025-08-27 08:45:06,946 - slack_bolt.App - DEBUG - Sending a request - url: https://slack.com/api/chat.postMessage, query_params: {}, body_params: {}, files: {}, json_body: {'channel': '#news-finder', 'text': 'üöÄ AI/ML News TLDR - 10 articles summarized', 'attachments': [], 'blocks': [{'type': 'header', 'text': {'type': 'plain_text', 'text': 'üöÄ AI/ML News TLDR - Daily Digest'}}, {'type': 'section', 'text': {'type': 'mrkdwn', 'text': "*Today's AI/ML News Summary*\nCollected 10 articles and created TLDR summaries."}}, {'type': 'divider'}, {'type': 'section', 'text': {'type': 'mrkdwn', 'text': "*1. Style4D-Bench: A Benchmark Suite for 4D Stylization*\nAI-powered SG60 Heart&Soul Experience launched at Orchard Central for Singapore's 60th year of independence celebration.\n\nüì∞ *Source:* ArXiv AI Papers | üè∑Ô∏è *Category:* Research Papers\n<http://arxiv.org/abs/2508.19243v1|Read more>"}}, {'type': 'divider'}, {'type': 'section', 'text': {'type': 'mrkdwn', 'text': '*2. Model Context Protocols in Adaptive Transport Systems: A Survey*\nMitti Labs collaborates with The Nature Conservancy to promote climate-friendly rice farming in India using AI to monitor methane emissions.\n\nüì∞ *Source:* ArXiv AI Papers | üè∑Ô∏è *Category:* Research Papers\n<http://arxiv.org/abs/2508.19239v1|Read more>'}}, {'type': 'divider'}, {'type': 'section', 'text': {'type': 'mrkdwn', 'text': '*3. StepWiser: Stepwise Generative Judges for Wiser Reasoning*\nZJLD Group Inc. announces interim results for FY2025 amidst industry challenges, focusing on innovation and cultural stewardship for high-quality transformation.\n\nüì∞ *Source:* ArXiv AI Papers | üè∑Ô∏è *Category:* Research Papers\n<http://arxiv.org/abs/2508.19229v1|Read more>'}}, {'type': 'divider'}, {'type': 'section', 'text': {'type': 'mrkdwn', 'text': '*4. Predicting the Order of Upcoming Tokens Improves Language Modeling*\nFlamengo achieved their biggest win in the Brasileir√£o history with an 8-0 victory over Vit√≥ria.\n\nüì∞ *Source:* ArXiv AI Papers | üè∑Ô∏è *Category:* Research Papers\n<http://arxiv.org/abs/2508.19228v1|Read more>'}}, {'type': 'divider'}, {'type': 'section', 'text': {'type': 'mrkdwn', 'text': '*5. ZJLD Group Announces Interim Results for FY2025*\nStyle4D-Bench is a benchmark suite for 4D stylization, offering evaluation protocols, a strong baseline, and dynamic 4D scenes. Style4D framework achieves state-of-the-art performance in 4D stylization.\n\nüì∞ *Source:* Tech News AI | üè∑Ô∏è *Category:* technology\n<https://hk.news.yahoo.com/zjld-group-announces-interim-results-111000033.html|Read more>'}}, {'type': 'divider'}, {'type': 'section', 'text': {'type': 'mrkdwn', 'text': '*6. Flamengo seal biggest ever win in Brasileir√£o points system era*\nSurvey explores Model Context Protocol (MCP) as a unifying paradigm for adaptive transport systems, emphasizing its role in integrating protocols and context-aware decision making.\n\nüì∞ *Source:* Tech News AI | üè∑Ô∏è *Category:* technology\n<https://onefootball.com/en/news/flamengo-seal-biggest-ever-win-in-brasileirao-points-system-era-41566229|Read more>'}}, {'type': 'divider'}, {'type': 'section', 'text': {'type': 'mrkdwn', 'text': '*7. AI-powered SG60 Heart&Soul Experience launched at Orchard Central*\nStepWiser introduces a generative judge for reasoning about multi-step models, improving judgment accuracy and inference-time search.\n\nüì∞ *Source:* Tech News AI | üè∑Ô∏è *Category:* technology\n<https://www.channelnewsasia.com/singapore/launch-sg60-heartsoul-exhibition-5312761|Read more>'}}, {'type': 'divider'}, {'type': 'section', 'text': {'type': 'mrkdwn', 'text': '*8. How one AI startup is helping rice farmers battle climate change*\nToken Order Prediction (TOP) outperforms Multi-Token Prediction (MTP) and next-token prediction (NTP) in language modeling by training models to order upcoming tokens using a learning-to-rank loss.\n\nüì∞ *Source:* TechCrunch AI | üè∑Ô∏è *Category:* AI/ML Technology\n<https://techcrunch.com/2025/08/26/how-one-ai-startup-is-helping-rice-farmers-battle-climate-change/|Read more>'}}, {'type': 'divider'}, {'type': 'section', 'text': {'type': 'mrkdwn', 'text': '*9. Harvard dropouts to launch ‚Äòalways on‚Äô AI smart glasses that listen and record every conversation*\nFormer Harvard students are launching AI smart glasses with an always-on microphone after controversial projects. The glasses can listen and record conversations.\n\nüì∞ *Source:* TechCrunch AI | üè∑Ô∏è *Category:* AI/ML Technology\n<https://techcrunch.com/2025/08/20/harvard-dropouts-to-launch-always-on-ai-smart-glasses-that-listen-and-record-every-conversation/|Read more>'}}, {'type': 'divider'}, {'type': 'section', 'text': {'type': 'mrkdwn', 'text': '*10. Meta to add 100MW of solar power from US gear*\nMeta plans to install 100MW of solar power from US sources for a new AI data center in South Carolina.\n\nüì∞ *Source:* TechCrunch AI | üè∑Ô∏è *Category:* AI/ML Technology\n<https://techcrunch.com/2025/08/20/meta-to-add-100-mw-of-solar-power-from-u-s-gear/|Read more>'}}, {'type': 'context', 'elements': [{'type': 'mrkdwn', 'text': 'üìä *10* articles summarized ‚Ä¢ Generated at 08:45:06'}]}]}, headers: {'Content-Type': 'application/json;charset=utf-8', 'Authorization': '(redacted)', 'User-Agent': 'Bolt/1.23.0 Python/3.11.13 slackclient/3.36.0 Linux/6.8.0-65-generic'}
2025-08-27 08:45:07,940 - slack_bolt.App - DEBUG - Received the following response - status: 200, headers: {'date': 'Wed, 27 Aug 2025 03:15:07 GMT', 'server': 'Apache', 'vary': 'Accept-Encoding', 'x-slack-req-id': 'e0e2aa068418de66d8d5d4e2a9058a89', 'x-content-type-options': 'nosniff', 'x-xss-protection': '0', 'pragma': 'no-cache', 'cache-control': 'private, no-cache, no-store, must-revalidate', 'expires': 'Sat, 26 Jul 1997 05:00:00 GMT', 'content-type': 'application/json; charset=utf-8', 'x-accepted-oauth-scopes': 'chat:write', 'x-oauth-scopes': 'chat:write,files:write', 'access-control-expose-headers': 'x-slack-req-id, retry-after', 'access-control-allow-headers': 'slack-route, x-slack-version-ts, x-b3-traceid, x-b3-spanid, x-b3-parentspanid, x-b3-sampled, x-b3-flags', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'referrer-policy': 'no-referrer', 'x-slack-unique-id': 'aK54O3fUCujPPEOCGx28GgAAEDM', 'x-slack-backend': 'r', 'access-control-allow-origin': '*', 'content-length': '6358', 'via': '1.1 slack-prod.tinyspeck.com, envoy-www-iad-ndqeghfg,envoy-edge-bom-ydkrjzdl', 'x-envoy-attempt-count': '1', 'x-envoy-upstream-service-time': '433', 'x-backend': 'main_normal main_canary_with_overflow main_control_with_overflow', 'x-server': 'slack-www-hhvm-main-iad-cabj', 'x-slack-shared-secret-outcome': 'no-match', 'x-edge-backend': 'envoy-www', 'timing-allow-origin': '*', 'x-slack-edge-shared-secret-outcome': 'no-match', 'connection': 'close'}, body: {"ok":true,"channel":"C09AUAZCQR1","ts":"1756264507.424229","message":{"user":"U09BG266092","type":"message","ts":"1756264507.424229","bot_id":"B09BG26606Q","app_id":"A09BBRCFEV8","text":":rocket: AI\/ML News TLDR - 10 articles summarized","team":"T4LJBDMDY","bot_profile":{"id":"B09BG26606Q","app_id":"A09BBRCFEV8","user_id":"U09BG266092","name":"Briefly","icons":{"image_36":"https:\/\/avatars.slack-edge.com\/2025-08-21\/9399655186801_62917fdb062b1fa75b31_36.png","image_48":"https:\/\/avatars.slack-edge.com\/2025-08-21\/9399655186801_62917fdb062b1fa75b31_48.png","image_72":"https:\/\/avatars.slack-edge.com\/2025-08-21\/9399655186801_62917fdb062b1fa75b31_72.png"},"deleted":false,"updated":1755759762,"team_id":"T4LJBDMDY"},"blocks":[{"type":"header","block_id":"7q0ac","text":{"type":"plain_text","text":":rocket: AI\/ML News TLDR - Daily Digest","emoji":true}},{"type":"section","block_id":"UnpML","text":{"type":"mrkdwn","text":"*Today's AI\/ML News Summary*\nCollected 10 articles and created TLDR summaries.","verbatim":false}},{"type":"divider","block_id":"zkZOT"},{"type":"section","block_id":"8MqJi","text":{"type":"mrkdwn","text":"*1. Style4D-Bench: A Benchmark Suite for 4D Stylization*\nAI-powered SG60 Heart&amp;Soul Experience launched at Orchard Central for Singapore's 60th year of independence celebration.\n\n:newspaper: *Source:* ArXiv AI Papers | :label: *Category:* Research Papers\n<http:\/\/arxiv.org\/abs\/2508.19243v1|Read more>","verbatim":false}},{"type":"divider","block_id":"dusF1"},{"type":"section","block_id":"f1+7r","text":{"type":"mrkdwn","text":"*2. Model Context Protocols in Adaptive Transport Systems: A Survey*\nMitti Labs collaborates with The Nature Conservancy to promote climate-friendly rice farming in India using AI to monitor methane emissions.\n\n:newspaper: *Source:* ArXiv AI Papers | :label: *Category:* Research Papers\n<http:\/\/arxiv.org\/abs\/2508.19239v1|Read more>","verbatim":false}},{"type":"divider","block_id":"67V79"},{"type":"section","block_id":"M7Hbz","text":{"type":"mrkdwn","text":"*3. StepWiser: Stepwise Generative Judges for Wiser Reasoning*\nZJLD Group Inc. announces interim results for FY2025 amidst industry challenges, focusing on innovation and cultural stewardship for high-quality transformation.\n\n:newspaper: *Source:* ArXiv AI Papers | :label: *Category:* Research Papers\n<http:\/\/arxiv.org\/abs\/2508.19229v1|Read more>","verbatim":false}},{"type":"divider","block_id":"DV2fn"},{"type":"section","block_id":"8fnsJ","text":{"type":"mrkdwn","text":"*4. Predicting the Order of Upcoming Tokens Improves Language Modeling*\nFlamengo achieved their biggest win in the Brasileir\u00e3o history with an 8-0 victory over Vit\u00f3ria.\n\n:newspaper: *Source:* ArXiv AI Papers | :label: *Category:* Research Papers\n<http:\/\/arxiv.org\/abs\/2508.19228v1|Read more>","verbatim":false}},{"type":"divider","block_id":"7uDaB"},{"type":"section","block_id":"23Uh9","text":{"type":"mrkdwn","text":"*5. ZJLD Group Announces Interim Results for FY2025*\nStyle4D-Bench is a benchmark suite for 4D stylization, offering evaluation protocols, a strong baseline, and dynamic 4D scenes. Style4D framework achieves state-of-the-art performance in 4D stylization.\n\n:newspaper: *Source:* Tech News AI | :label: *Category:* technology\n<https:\/\/hk.news.yahoo.com\/zjld-group-announces-interim-results-111000033.html|Read more>","verbatim":false}},{"type":"divider","block_id":"VKcxQ"},{"type":"section","block_id":"riptI","text":{"type":"mrkdwn","text":"*6. Flamengo seal biggest ever win in Brasileir\u00e3o points system era*\nSurvey explores Model Context Protocol (MCP) as a unifying paradigm for adaptive transport systems, emphasizing its role in integrating protocols and context-aware decision making.\n\n:newspaper: *Source:* Tech News AI | :label: *Category:* technology\n<https:\/\/onefootball.com\/en\/news\/flamengo-seal-biggest-ever-win-in-brasileirao-points-system-era-41566229|Read more>","verbatim":false}},{"type":"divider","block_id":"gT5zn"},{"type":"section","block_id":"vlLp2","text":{"type":"mrkdwn","text":"*7. AI-powered SG60 Heart&amp;Soul Experience launched at Orchard Central*\nStepWiser introduces a generative judge for reasoning about multi-step models, improving judgment accuracy and inference-time search.\n\n:newspaper: *Source:* Tech News AI | :label: *Category:* technology\n<https:\/\/www.channelnewsasia.com\/singapore\/launch-sg60-heartsoul-exhibition-5312761|Read more>","verbatim":false}},{"type":"divider","block_id":"8M6QL"},{"type":"section","block_id":"w+oXA","text":{"type":"mrkdwn","text":"*8. How one AI startup is helping rice farmers battle climate change*\nToken Order Prediction (TOP) outperforms Multi-Token Prediction (MTP) and next-token prediction (NTP) in language modeling by training models to order upcoming tokens using a learning-to-rank loss.\n\n:newspaper: *Source:* TechCrunch AI | :label: *Category:* AI\/ML Technology\n<https:\/\/techcrunch.com\/2025\/08\/26\/how-one-ai-startup-is-helping-rice-farmers-battle-climate-change\/|Read more>","verbatim":false}},{"type":"divider","block_id":"NDrae"},{"type":"section","block_id":"MCi13","text":{"type":"mrkdwn","text":"*9. Harvard dropouts to launch \u2018always on\u2019 AI smart glasses that listen and record every conversation*\nFormer Harvard students are launching AI smart glasses with an always-on microphone after controversial projects. The glasses can listen and record conversations.\n\n:newspaper: *Source:* TechCrunch AI | :label: *Category:* AI\/ML Technology\n<https:\/\/techcrunch.com\/2025\/08\/20\/harvard-dropouts-to-launch-always-on-ai-smart-glasses-that-listen-and-record-every-conversation\/|Read more>","verbatim":false}},{"type":"divider","block_id":"Ywh0Q"},{"type":"section","block_id":"7WFa5","text":{"type":"mrkdwn","text":"*10. Meta to add 100MW of solar power from US gear*\nMeta plans to install 100MW of solar power from US sources for a new AI data center in South Carolina.\n\n:newspaper: *Source:* TechCrunch AI | :label: *Category:* AI\/ML Technology\n<https:\/\/techcrunch.com\/2025\/08\/20\/meta-to-add-100-mw-of-solar-power-from-u-s-gear\/|Read more>","verbatim":false}},{"type":"context","block_id":"m2zyP","elements":[{"type":"mrkdwn","text":":bar_chart: *10* articles summarized \u2022 Generated at 08:45:06","verbatim":false}]}]}}
2025-08-27 08:45:07,941 - slackbot.slack.publisher - INFO - TLDR message published to #news-finder
2025-08-27 08:45:07,941 - slackbot.services.publisher_service - INFO - ‚úÖ Message published successfully to slack
2025-08-27 08:45:07,942 - __main__ - INFO - üéâ Successfully published to Slack!
2025-08-27 08:45:07,942 - __main__ - INFO - üì∫ Channel: C09AUAZCQR1
2025-08-27 08:45:07,942 - __main__ - INFO - üÜî Message ID: None
2025-08-27 08:45:07,943 - __main__ - INFO - 
üéâ Briefly Bot completed successfully!
2025-08-27 08:45:07,943 - __main__ - INFO - üìä Summary:
2025-08-27 08:45:07,943 - __main__ - INFO -   ‚Ä¢ Articles collected: 10
2025-08-27 08:45:07,944 - __main__ - INFO -   ‚Ä¢ TLDR summaries created: 10
2025-08-27 08:45:07,944 - __main__ - INFO -   ‚Ä¢ Published to Slack: C09AUAZCQR1
2025-08-27 08:45:07,947 - __main__ - INFO - ‚úÖ Briefly Bot completed successfully
2025-08-27 08:45:08,083 - httpcore.connection - DEBUG - close.started
2025-08-27 08:45:08,084 - httpcore.connection - DEBUG - close.complete
